<!DOCTYPE html> <html class=no-js lang=en> <head> <meta charset=utf-8> <meta content='IE=edge' http-equiv=X-UA-Compatible> <title>Sass: sass:meta</title> <meta content='Syntatically Awesome Style Sheets' name=description> <meta content='width=device-width, initial-scale=1' name=viewport> <link href='/feed.xml' rel=alternate type='application/atom+xml'> <link href="https://fonts.googleapis.com/css?family=Source+Code+Pro|Source+Sans+Pro:300,400,600|Source+Serif+Pro" rel=stylesheet /> <link href="https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css" rel=stylesheet /> <link href="/assets/css/sass-6cc9628c.css" rel=stylesheet /> <noscript><link href="/assets/css/noscript-c6723936.css" rel=stylesheet /></noscript> <script>
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-535380-8']);
  _gaq.push(['_trackPageview']);
  
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script> <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  
  ga('create', 'UA-535380-14', 'sass-lang.com');
  ga('send', 'pageview');
</script> </head> <body class='documentation documentation_modules documentation_modules_meta'> <!--[if lt IE 9]><p class=browserupgrade> You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience and security. </p><![endif]--> <header class=sl-r-banner itemscope=itemscope itemtype='http://schema.org/WPHeader' role=banner> <div class='sl-c-alert sl-c-alert--info'> <div class=sl-l-container> <p> Sass just launched a brand new module system. <a href="/blog/the-module-system-is-launched">Learn all about the module system on the Sass blog </a>! </p> </div> </div> <div class=sl-c-pop-stripe></div> <div class=sl-l-container> <div class='sl-l-grid sl-l-grid--full sl-l-large-grid--fit sl-l-large-grid--center sl-l-large-grid--gutters'> <p class='sl-l-grid__column sl-r-banner__brand'> <a href="/"><img alt=Sass height=48 src="/assets/img/logos/logo-b6e1ef6e.svg"/> </a></p> <nav aria-label='Site navigation' class='sl-r-banner__navigation sl-l-grid__column sl-l-large-grid sl-l-large-grid__column--auto-size sl-c-list-horizontal-wrapper' itemscope=itemscope itemtype='http://schema.org/SiteNavigationElement' role=navigation> <ul> <li><a href="/install">Install</a></li> <li><a href="/guide">Learn Sass</a></li> <li><a href="/blog">Blog</a></li> <li><a href="/documentation">Documentation</a></li> <li><a href="/community">Get Involved</a></li> <li><label class=visuallyhidden for=s>Search</label><input placeholder=Search class=search id=s name=s></li> </ul> </nav> </div> </div> </header> <main class=content id=main-content itemprop=mainContentOfPage role=main> <h1 class=sl-l-container> sass:meta </h1> <div class='sl-background--white sl-l-container sl-l-section'><div class=sl-l-medium-holy-grail> <div class=sl-l-medium-holy-grail__body> <nav aria-label='Content navigation' class=sl-l-medium-holy-grail__navigation role=navigation> <div class='sl-c-list-navigation-wrapper sl-c-list-navigation-wrapper--collapsible'> <h2>Contents</h2> <ul><li><a href="/documentation/syntax" class=section>Syntax</a> <ul><li class=overview><a href="/documentation/syntax">Overview</a></li> <li><a href="/documentation/syntax/parsing" class="">Parsing a Stylesheet</a> </li> <li><a href="/documentation/syntax/structure" class="">Structure of a Stylesheet</a> </li> <li><a href="/documentation/syntax/comments" class="">Comments</a> </li> <li><a href="/documentation/syntax/special-functions" class="">Special Functions</a> </li> </ul> </li> <li><a href="/documentation/style-rules" class=section>Style Rules</a> <ul><li class=overview><a href="/documentation/style-rules">Overview</a></li> <li><a href="/documentation/style-rules/declarations" class="">Property Declarations</a> </li> <li><a href="/documentation/style-rules/parent-selector" class="">Parent Selector</a> </li> <li><a href="/documentation/style-rules/placeholder-selectors" class="">Placeholder Selectors</a> </li> </ul> </li> <li><a href="/documentation/variables" class="">Variables</a> </li> <li><a href="/documentation/interpolation" class="">Interpolation</a> </li> <li><a href="/documentation/at-rules" class=section>At-Rules</a> <ul><li class=overview><a href="/documentation/at-rules">Overview</a></li> <li><a href="/documentation/at-rules/use" class=""><code>@use</code></a> </li> <li><a href="/documentation/at-rules/forward" class=""><code>@forward</code></a> </li> <li><a href="/documentation/at-rules/import" class=""><code>@import</code></a> </li> <li><a href="/documentation/at-rules/mixin" class=""><code>@mixin</code> and <code>@include</code></a> </li> <li><a href="/documentation/at-rules/function" class=""><code>@function</code></a> </li> <li><a href="/documentation/at-rules/extend" class=""><code>@extend</code></a> </li> <li><a href="/documentation/at-rules/error" class=""><code>@error</code></a> </li> <li><a href="/documentation/at-rules/warn" class=""><code>@warn</code></a> </li> <li><a href="/documentation/at-rules/debug" class=""><code>@debug</code></a> </li> <li><a href="/documentation/at-rules/at-root" class=""><code>@at-root</code></a> </li> <li><a href="/documentation/at-rules/control" class=section>Flow Control</a> <ul><li class=overview><a href="/documentation/at-rules/control">Overview</a></li> <li><a href="/documentation/at-rules/control/if" class=""><code>@if</code> and <code>@else</code></a> </li> <li><a href="/documentation/at-rules/control/each" class=""><code>@each</code></a> </li> <li><a href="/documentation/at-rules/control/for" class=""><code>@for</code></a> </li> <li><a href="/documentation/at-rules/control/while" class=""><code>@while</code></a> </li> </ul> </li> <li><a href="/documentation/at-rules/css" class="">From CSS</a> </li> </ul> </li> <li><a href="/documentation/values" class=section>Values</a> <ul><li class=overview><a href="/documentation/values">Overview</a></li> <li><a href="/documentation/values/numbers" class="">Numbers</a> </li> <li><a href="/documentation/values/strings" class="">Strings</a> </li> <li><a href="/documentation/values/colors" class="">Colors</a> </li> <li><a href="/documentation/values/lists" class="">Lists</a> </li> <li><a href="/documentation/values/maps" class="">Maps</a> </li> <li><a href="/documentation/values/booleans" class=""><code>true</code> and <code>false</code></a> </li> <li><a href="/documentation/values/null" class=""><code>null</code></a> </li> <li><a href="/documentation/values/functions" class="">Functions</a> </li> </ul> </li> <li><a href="/documentation/operators" class=section>Operators</a> <ul><li class=overview><a href="/documentation/operators">Overview</a></li> <li><a href="/documentation/operators/equality" class="">Equality</a> </li> <li><a href="/documentation/operators/relational" class="">Relational</a> </li> <li><a href="/documentation/operators/numeric" class="">Numeric</a> </li> <li><a href="/documentation/operators/string" class="">String</a> </li> <li><a href="/documentation/operators/boolean" class="">Boolean</a> </li> </ul> </li> <li><a href="/documentation/modules" class="section open selected">Built-In Modules</a> <ul><li class=overview><a href="/documentation/modules">Overview</a></li> <li><a href="/documentation/modules/color" class=""><code>sass:color</code></a> </li> <li><a href="/documentation/modules/list" class=""><code>sass:list</code></a> </li> <li><a href="/documentation/modules/map" class=""><code>sass:map</code></a> </li> <li><a href="/documentation/modules/math" class=""><code>sass:math</code></a> </li> <li><a href="/documentation/modules/meta" class="open selected"><code>sass:meta</code></a> </li> <li><a href="/documentation/modules/selector" class=""><code>sass:selector</code></a> </li> <li><a href="/documentation/modules/string" class=""><code>sass:string</code></a> </li> </ul> </li> <li><a href="/documentation/breaking-changes" class=section>Breaking Changes</a> <ul><li class=overview><a href="/documentation/breaking-changes">Overview</a></li> <li><a href="/documentation/breaking-changes/extend-compound" class="">Extending Compound Selectors</a> </li> <li><a href="/documentation/breaking-changes/css-vars" class="">CSS Variable Syntax</a> </li> </ul> </li> <li><a href="/documentation/cli" class=section>Command Line</a> <ul><li class=overview><a href="/documentation/cli">Overview</a></li> <li><a href="/documentation/cli/dart-sass" class="">Dart Sass</a> </li> <li><a href="/documentation/cli/ruby-sass" class="">Ruby Sass</a> </li> <li><a href="/documentation/cli/migrator" class="">Migrator</a> </li> </ul> </li> <li><a href="/documentation/js-api" class="">JavaScript API</a> </li> </ul> </div> </nav> <div class=sl-l-medium-holy-grail__main> <div class=sl-l-large-holy-grail> <div class=sl-l-large-holy-grail__body> <div class='sl-l-large-holy-grail__main docSearch-content'> <div class='sl-l-container sl-l-container--small'> <dl class="impl-status sl-c-description-list sl-c-description-list--horizontal"><div class=compatibility>Compatibility:</div> <div><dt>Dart&nbsp;Sass</dt> <dd>since&nbsp;<span class=caps>1.23.0</span></dd> </div> <div><dt>LibSass</dt> <dd>✗</dd> </div> <div><dt>Ruby&nbsp;Sass</dt> <dd>✗</dd> </div> <div><a>▶</a></div> </dl> <div class="sl-c-callout sl-c-callout--impl-status"><p>Only Dart Sass currently supports loading built-in modules with <code>@use</code>. Users of other implementations must call functions using their global names&nbsp;instead.</p></div> <h2 id=mixins> <a class=anchor href="#mixins"><span class=visuallyhidden>Mixins permalink</span></a>Mixins</h2> <div class="sl-c-callout sl-c-callout--function" id=load-css><pre class="signature highlight scss"><a class="anchor" href="#load-css"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.load-css">load-css</span><span class="p">(</span><span class="nv">$url</span><span class="o">,</span> <span class="nv">$with</span><span class="o">:</span> <span class="n">null</span><span class="p">)</span></code> </pre> <dl class="impl-status sl-c-description-list sl-c-description-list--horizontal"><div class=compatibility>Compatibility:</div> <div><dt>Dart&nbsp;Sass</dt> <dd>since&nbsp;(unreleased)</dd> </div> <div><dt>LibSass</dt> <dd>✗</dd> </div> <div><dt>Ruby&nbsp;Sass</dt> <dd>✗</dd> </div> <div><a>▶</a></div> </dl> <div class="sl-c-callout sl-c-callout--impl-status"><p>Only Dart Sass currently supports this&nbsp;mixin.</p></div> <p>Loads the <a href="../at-rules/use">module</a> at <code>$url</code> and includes its <span class=caps>CSS</span> as though it were written as the contents of this mixin. The <code>$with</code> parameter provides <a href="../at-rules/use#configuring-modules">configuration</a> for the modules; if it&rsquo;s passed, it must be a map from variable names (without <code>$</code>) to the values of those variables to use in the loaded&nbsp;module.</p> <p>If <code>$url</code> is relative, it&rsquo;s interpreted as relative to the file in which <code>meta.load-css()</code> is&nbsp;included.</p> <p><strong>Like the <a href="../at-rules/use"><code>@use</code> rule</a></strong>:</p> <ul> <li><p>This will only evaluate the given module once, even if it&rsquo;s loaded multiple times in different&nbsp;ways.</p></li> <li><p>This cannot provide configuration to a module that&rsquo;s already been loaded, whether or not it was already loaded with&nbsp;configuration.</p></li> </ul> <p><strong>Unlike the <a href="../at-rules/use"><code>@use</code> rule</a></strong>:</p> <ul> <li><p>This doesn&rsquo;t make any members from the loaded module available in the current&nbsp;module.</p></li> <li><p>This can be used anywhere in a stylesheet. It can even be nested within style rules to create nested&nbsp;styles!</p></li> <li><p>The module <span class=caps>URL</span> being loaded can come from a variable and include <a href="../interpolation">interpolation</a>.</p></li> </ul> <div class="sl-c-callout sl-c-callout--warning"><h3>⚠️ Heads&nbsp;up!</h3> <p>The <code>$url</code> parameter should be a string containing a <span class=caps>URL</span> like you&rsquo;d pass to the <code>@use</code> rule. It shouldn&rsquo;t be a <span class=caps>CSS</span>&nbsp;<code>url()</code>!</p> </div> <div class="code-example ui-tabs can-split" style="--split-location: 67.27272727272727%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-1-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-1-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-1-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-1-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="c1">// dark-theme/_code.scss&#x000A;</span><span class="nv">$border-contrast</span><span class="p">:</span> <span class="bp">false</span> <span class="o">!</span><span class="nb">default</span><span class="p">;</span>&#x000A;&#x000A;<span class="nt">code</span> <span class="p">{</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="mh">#6b717f</span><span class="p">;</span>&#x000A;  <span class="nl">color</span><span class="p">:</span> <span class="mh">#d2e1dd</span><span class="p">;</span>&#x000A;  <span class="k">@if</span> <span class="nv">$border-contrast</span> <span class="p">{</span>&#x000A;    <span class="nl">border-color</span><span class="p">:</span> <span class="mh">#dadbdf</span><span class="p">;</span>&#x000A;  <span class="p">}</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre><pre class="highlight scss"><code><span class="c1">// style.scss&#x000A;</span><span class="k">@use</span> <span class="s2">"sass:meta"</span><span class="p">;</span>&#x000A;&#x000A;<span class="nt">body</span><span class="nc">.dark</span> <span class="p">{</span>&#x000A;  <span class="k">@include</span> <span class="nd">meta</span><span class="o">.</span><span class="nf">load-css</span><span class="p">(</span><span class="s2">"dark-theme/code"</span><span class="o">,</span>&#x000A;      <span class="nv">$with</span><span class="o">:</span> <span class="p">(</span><span class="s2">"border-contrast"</span><span class="o">:</span> <span class="bp">true</span><span class="p">));</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-1-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="c1">// dark-theme/_code.sass&#x000A;</span><span class="nv">$border-contrast</span><span class="p">:</span> <span class="bp">false</span> <span class="o">!</span><span class="nb">default</span>&#x000A;&#x000A;<span class="nt">code</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="mh">#6b717f</span>&#x000A;  <span class="nl">color</span><span class="p">:</span> <span class="mh">#d2e1dd</span>&#x000A;  <span class="k">@if</span> <span class="nv">$border-contrast</span>&#x000A;    <span class="nl">border-color</span><span class="p">:</span> <span class="mh">#dadbdf</span>&#x000A;&#x000A;&#x000A;</code></pre><pre class="highlight sass"><code><span class="c1">// style.sass&#x000A;</span><span class="k">@use</span> <span class="s2">"sass:meta"</span>&#x000A;&#x000A;<span class="nt">body</span><span class="nc">.dark</span>&#x000A;  <span class="nv">$configuration</span><span class="p">:</span> <span class="p">(</span><span class="s2">"border-contrast"</span><span class="o">:</span> <span class="bp">true</span><span class="p">)</span>&#x000A;  <span class="k">@include</span> <span class="nd">meta</span><span class="o">.</span><span class="nf">load-css</span><span class="p">(</span><span class="s2">"dark-theme/code"</span><span class="o">,</span> <span class="nv">$with</span><span class="o">:</span> <span class="nv">$configuration</span><span class="p">)</span>&#x000A;&#x000A;</code></pre></div><div id=example-1-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nt">body</span><span class="nc">.dark</span> <span class="nt">code</span> <span class="p">{</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#6b717f</span><span class="p">;</span>&#x000A;  <span class="nl">color</span><span class="p">:</span> <span class="m">#d2e1dd</span><span class="p">;</span>&#x000A;  <span class="nl">border-color</span><span class="p">:</span> <span class="m">#dadbdf</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> </div> <h2 id=functions> <a class=anchor href="#functions"><span class=visuallyhidden>Functions permalink</span></a>Functions</h2> <div class="sl-c-callout sl-c-callout--function" id=call><pre class="signature highlight scss"><a class="anchor" href="#call"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.call">call</span><span class="p">(</span><span class="nv">$function</span><span class="o">,</span> <span class="nv">$args</span><span class="o">...</span><span class="p">)</span>&#x0000A<span class="nf">call</span><span class="p">(</span><span class="nv">$function</span><span class="o">,</span> <span class="nv">$args</span><span class="o">...</span><span class="p">)</span></code> </pre> <dl class="impl-status sl-c-description-list sl-c-description-list--horizontal"><div class=compatibility>Compatibility (Argument Type):</div> <div><dt>Dart&nbsp;Sass</dt> <dd>✓</dd> </div> <div><dt>LibSass</dt> <dd>since&nbsp;<span class=caps>3.5.0</span></dd> </div> <div><dt>Ruby&nbsp;Sass</dt> <dd>since&nbsp;<span class=caps>3.5.0</span></dd> </div> <div><a>▶</a></div> </dl> <div class="sl-c-callout sl-c-callout--impl-status"><p>In older versions of LibSass and Ruby Sass, the <a href="/documentation/modules/meta#call"><code>call()</code> function</a> took a string representing a function&rsquo;s name. This was changed to take a function value instead in preparation for a new module system where functions are no longer global and so a given name may not always refer to the same&nbsp;function.</p> <p>Passing a string to <code>call()</code> still works in all implementations, but it&rsquo;s deprecated and will be disallowed in future&nbsp;versions.</p></div> <p>Invokes <code>$function</code> with <code>$args</code> and returns the&nbsp;result.</p> <p>The <code>$function</code> should be a <a href="../values/functions">function</a> returned by <a href="#get-function"><code>meta.get-function()</code></a>.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-2-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-2-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-2-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-2-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@use</span> <span class="s2">"sass:list"</span><span class="p">;</span>&#x000A;<span class="k">@use</span> <span class="s2">"sass:meta"</span><span class="p">;</span>&#x000A;<span class="k">@use</span> <span class="s2">"sass:string"</span><span class="p">;</span>&#x000A;&#x000A;<span class="c1">/// Return a copy of $list with all elements for which $condition returns `true`&#x000A;/// removed.&#x000A;</span><span class="k">@function</span> <span class="nf">remove-where</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$condition</span><span class="p">)</span> <span class="p">{</span>&#x000A;  <span class="nv">$new-list</span><span class="p">:</span> <span class="p">();</span>&#x000A;  <span class="nv">$separator</span><span class="p">:</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(</span><span class="nv">$list</span><span class="p">);</span>&#x000A;  <span class="k">@each</span> <span class="nv">$element</span> <span class="n">in</span> <span class="nv">$list</span> <span class="p">{</span>&#x000A;    <span class="k">@if</span> <span class="ow">not</span> <span class="n">meta</span><span class="o">.</span><span class="nf">call</span><span class="p">(</span><span class="nv">$condition</span><span class="o">,</span> <span class="nv">$element</span><span class="p">)</span> <span class="p">{</span>&#x000A;      <span class="nv">$new-list</span><span class="p">:</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="nv">$new-list</span><span class="o">,</span> <span class="nv">$element</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="nv">$separator</span><span class="p">);</span>&#x000A;    <span class="p">}</span>&#x000A;  <span class="p">}</span>&#x000A;  <span class="k">@return</span> <span class="nv">$new-list</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nv">$fonts</span><span class="p">:</span> <span class="n">Tahoma</span><span class="o">,</span> <span class="n">Geneva</span><span class="o">,</span> <span class="s2">"Helvetica Neue"</span><span class="o">,</span> <span class="n">Helvetica</span><span class="o">,</span> <span class="n">Arial</span><span class="o">,</span> <span class="nb">sans-serif</span><span class="p">;</span>&#x000A;&#x000A;<span class="nt">content</span> <span class="p">{</span>&#x000A;  <span class="k">@function</span> <span class="nf">contains-helvetica</span><span class="p">(</span><span class="nv">$string</span><span class="p">)</span> <span class="p">{</span>&#x000A;    <span class="k">@return</span> <span class="n">string</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="nv">$string</span><span class="o">,</span> <span class="s2">"Helvetica"</span><span class="p">);</span>&#x000A;  <span class="p">}</span>&#x000A;  <span class="nl">font-family</span><span class="p">:</span> <span class="nf">remove-where</span><span class="p">(</span><span class="nv">$fonts</span><span class="o">,</span> <span class="n">meta</span><span class="o">.</span><span class="nf">get-function</span><span class="p">(</span><span class="s2">"contains-helvetica"</span><span class="p">));</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-2-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@use</span> <span class="s2">"sass:list"</span>&#x000A;<span class="k">@use</span> <span class="s2">"sass:meta"</span>&#x000A;<span class="k">@use</span> <span class="s2">"sass:string"</span>&#x000A;&#x000A;<span class="c1">/// Return a copy of $list with all elements for which $condition returns `true`&#x000A;/// removed.&#x000A;</span><span class="k">@function</span> <span class="nf">remove-where</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$condition</span><span class="p">)</span>&#x000A;  <span class="nv">$new-list</span><span class="p">:</span> <span class="p">()</span>&#x000A;  <span class="nv">$separator</span><span class="p">:</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(</span><span class="nv">$list</span><span class="p">)</span>&#x000A;  <span class="k">@each</span> <span class="nv">$element</span> <span class="n">in</span> <span class="nv">$list</span>&#x000A;    <span class="k">@if</span> <span class="ow">not</span> <span class="n">meta</span><span class="o">.</span><span class="nf">call</span><span class="p">(</span><span class="nv">$condition</span><span class="o">,</span> <span class="nv">$element</span><span class="p">)</span>&#x000A;      <span class="nv">$new-list</span><span class="p">:</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="nv">$new-list</span><span class="o">,</span> <span class="nv">$element</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="nv">$separator</span><span class="p">)</span>&#x000A;&#x000A;&#x000A;  <span class="k">@return</span> <span class="nv">$new-list</span>&#x000A;&#x000A;&#x000A;<span class="nv">$fonts</span><span class="p">:</span> <span class="n">Tahoma</span><span class="o">,</span> <span class="n">Geneva</span><span class="o">,</span> <span class="s2">"Helvetica Neue"</span><span class="o">,</span> <span class="n">Helvetica</span><span class="o">,</span> <span class="n">Arial</span><span class="o">,</span> <span class="nb">sans-serif</span>&#x000A;&#x000A;<span class="nt">content</span>&#x000A;  <span class="k">@function</span> <span class="nf">contains-helvetica</span><span class="p">(</span><span class="nv">$string</span><span class="p">)</span>&#x000A;    <span class="k">@return</span> <span class="n">string</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="nv">$string</span><span class="o">,</span> <span class="s2">"Helvetica"</span><span class="p">)</span>&#x000A;&#x000A;  <span class="nl">font-family</span><span class="p">:</span> <span class="nf">remove-where</span><span class="p">(</span><span class="nv">$fonts</span><span class="o">,</span> <span class="n">meta</span><span class="o">.</span><span class="nf">get-function</span><span class="p">(</span><span class="s2">"contains-helvetica"</span><span class="p">))</span>&#x000A;&#x000A;</code></pre></div><div id=example-2-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nt">content</span> <span class="p">{</span>&#x000A;  <span class="nl">font-family</span><span class="p">:</span> <span class="n">Tahoma</span><span class="p">,</span> <span class="n">Geneva</span><span class="p">,</span> <span class="n">Arial</span><span class="p">,</span> <span class="nb">sans-serif</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=content-exists><pre class="signature highlight scss"><a class="anchor" href="#content-exists"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.content-exists">content-exists</span><span class="p">()</span>&#x0000A<span class="nf">content-exists</span><span class="p">()</span> <span class="c1">//=> <a href="/documentation/values/booleans">boolean</a></span></code> </pre> <p>Returns whether the current mixin was passed a <a href="../at-rules/mixin#content-blocks"><code>@content</code> block</a>.</p> <p>Throws an error if called outside of a&nbsp;mixin.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-3-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-3-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-3-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@mixin</span> <span class="nf">debug-content-exists</span> <span class="p">{</span>&#x000A;  <span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">content-exists</span><span class="p">();</span>&#x000A;  <span class="k">@content</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="k">@include</span> <span class="nd">debug-content-exists</span><span class="p">;</span> <span class="c1">// false&#x000A;</span><span class="k">@include</span> <span class="nd">debug-content-exists</span> <span class="p">{</span> <span class="c1">// true&#x000A;</span>  <span class="c1">// Content!&#x000A;</span><span class="p">}</span>&#x000A;</code></pre></div><div id=example-3-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@mixin</span> <span class="nf">debug-content-exists</span>&#x000A;  <span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">content-exists</span><span class="p">()</span>&#x000A;  <span class="k">@content</span>&#x000A;&#x000A;&#x000A;<span class="k">@include</span> <span class="nd">debug-content-exists</span>  <span class="o">//</span> <span class="bp">false</span>&#x000A;<span class="k">@include</span> <span class="nd">debug-content-exists</span>   <span class="o">//</span> <span class="bp">true</span>&#x000A;  <span class="c1">// Content!&#x000A;</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=feature-exists><pre class="signature highlight scss"><a class="anchor" href="#feature-exists"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.feature-exists">feature-exists</span><span class="p">(</span><span class="nv">$feature</span><span class="p">)</span>&#x0000A<span class="nf">feature-exists</span><span class="p">(</span><span class="nv">$feature</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/booleans">boolean</a></span></code> </pre> <p>Returns whether the current Sass implementation supports&nbsp;<code>$feature</code>.</p> <p>The <code>$feature</code> must be a string. The currently recognized features&nbsp;are:</p> <ul> <li><code>global-variable-shadowing</code>, which means that a local variable will <a href="../variables#shadowing">shadow</a> a global variable unless it has the <code>!global</code>&nbsp;flag.</li> <li><code>extend-selector-pseudoclass</code>, which means that the <a href="../at-rules/extend"><code>@extend</code> rule</a> will affect selectors nested in pseudo-classes like&nbsp;<code>:not()</code>.</li> <li><code>units-level3</code>, which means that <a href="../values/numbers#units">unit arithmetic</a> supports units defined in <a href="http://www.w3.org/TR/css3-values"><span class=caps>CSS</span> Values and Units Level 3</a>.</li> <li><code>at-error</code>, which means that the <a href="../at-rules/error"><code>@error</code> rule</a> is&nbsp;supported.</li> <li><code>custom-property</code>, which means that <a href="../style-rules/declarations#custom-properties">custom property declaration</a> values don&rsquo;t support any <a href="../syntax/structure#expressions">expressions</a> other than <a href="../interpolation">interpolation</a>.</li> </ul> <p>Returns <code>false</code> for any unrecognized&nbsp;<code>$feature</code>.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-4-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-4-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-4-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">feature-exists</span><span class="p">(</span><span class="s2">"at-error"</span><span class="p">);</span> <span class="c1">// true&#x000A;</span><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">feature-exists</span><span class="p">(</span><span class="s2">"unrecognized"</span><span class="p">);</span> <span class="c1">// false&#x000A;</span></code></pre></div><div id=example-4-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">feature-exists</span><span class="p">(</span><span class="s2">"at-error"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">true</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">feature-exists</span><span class="p">(</span><span class="s2">"unrecognized"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">false</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=function-exists><pre class="signature highlight scss"><a class="anchor" href="#function-exists"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.function-exists">function-exists</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span>&#x0000A<span class="nf">function-exists</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/booleans">boolean</a></span></code> </pre> <p>Returns whether a function named <code>$name</code> is defined, either as a built-in function or a user-defined&nbsp;function.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-5-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-5-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-5-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">function-exists</span><span class="p">(</span><span class="s2">"scale-color"</span><span class="p">);</span> <span class="c1">// true&#x000A;</span><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">function-exists</span><span class="p">(</span><span class="s2">"add"</span><span class="p">);</span> <span class="c1">// false&#x000A;</span>&#x000A;<span class="k">@function</span> <span class="nf">add</span><span class="p">(</span><span class="nv">$num1</span><span class="o">,</span> <span class="nv">$num2</span><span class="p">)</span> <span class="p">{</span>&#x000A;  <span class="k">@return</span> <span class="nv">$num1</span> <span class="o">+</span> <span class="nv">$num2</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">function-exists</span><span class="p">(</span><span class="s2">"add"</span><span class="p">);</span> <span class="c1">// true&#x000A;</span></code></pre></div><div id=example-5-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">function-exists</span><span class="p">(</span><span class="s2">"scale-color"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">true</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">function-exists</span><span class="p">(</span><span class="s2">"add"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">false</span>&#x000A;&#x000A;<span class="k">@function</span> <span class="nf">add</span><span class="p">(</span><span class="nv">$num1</span><span class="o">,</span> <span class="nv">$num2</span><span class="p">)</span>&#x000A;  <span class="k">@return</span> <span class="nv">$num1</span> <span class="o">+</span> <span class="nv">$num2</span>&#x000A;&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">function-exists</span><span class="p">(</span><span class="s2">"add"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">true</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=get-function><pre class="signature highlight scss"><a class="anchor" href="#get-function"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.get-function">get-function</span><span class="p">(</span><span class="nv">$name</span><span class="o">,</span> <span class="nv">$css</span><span class="o">:</span> <span class="bp">false</span><span class="o">,</span> <span class="nv">$module</span><span class="o">:</span> <span class="n">null</span><span class="p">)</span>&#x0000A<span class="nf">get-function</span><span class="p">(</span><span class="nv">$name</span><span class="o">,</span> <span class="nv">$css</span><span class="o">:</span> <span class="bp">false</span><span class="o">,</span> <span class="nv">$module</span><span class="o">:</span> <span class="n">null</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/functions">function</a></span></code> </pre> <p>Returns the <a href="../values/functions">function</a> named&nbsp;<code>$name</code>.</p> <p>If <code>$module</code> is <code>null</code>, this returns the function named <code>$name</code> without a namespace (including <a href="../modules#global-functions">global built-in functions</a>). Otherwise, <code>$module</code> must be a string matching the namespace of a <a href="../at-rules/use"><code>@use</code> rule</a> in the current file, in which case this returns the function in that module named&nbsp;<code>$name</code>.</p> <p>By default, this throws an error if <code>$name</code> doesn&rsquo;t refer to Sass function. However, if <code>$css</code> is <code>true</code>, it instead returns a <a href="../at-rules/function#plain-css-functions">plain <span class=caps>CSS</span> function</a>.</p> <p>The returned function can be called using <a href="#call"><code>meta.call()</code></a>.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-6-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-6-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-6-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-6-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@use</span> <span class="s2">"sass:list"</span><span class="p">;</span>&#x000A;<span class="k">@use</span> <span class="s2">"sass:meta"</span><span class="p">;</span>&#x000A;<span class="k">@use</span> <span class="s2">"sass:string"</span><span class="p">;</span>&#x000A;&#x000A;<span class="c1">/// Return a copy of $list with all elements for which $condition returns `true`&#x000A;/// removed.&#x000A;</span><span class="k">@function</span> <span class="nf">remove-where</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$condition</span><span class="p">)</span> <span class="p">{</span>&#x000A;  <span class="nv">$new-list</span><span class="p">:</span> <span class="p">();</span>&#x000A;  <span class="nv">$separator</span><span class="p">:</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(</span><span class="nv">$list</span><span class="p">);</span>&#x000A;  <span class="k">@each</span> <span class="nv">$element</span> <span class="n">in</span> <span class="nv">$list</span> <span class="p">{</span>&#x000A;    <span class="k">@if</span> <span class="ow">not</span> <span class="n">meta</span><span class="o">.</span><span class="nf">call</span><span class="p">(</span><span class="nv">$condition</span><span class="o">,</span> <span class="nv">$element</span><span class="p">)</span> <span class="p">{</span>&#x000A;      <span class="nv">$new-list</span><span class="p">:</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="nv">$new-list</span><span class="o">,</span> <span class="nv">$element</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="nv">$separator</span><span class="p">);</span>&#x000A;    <span class="p">}</span>&#x000A;  <span class="p">}</span>&#x000A;  <span class="k">@return</span> <span class="nv">$new-list</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nv">$fonts</span><span class="p">:</span> <span class="n">Tahoma</span><span class="o">,</span> <span class="n">Geneva</span><span class="o">,</span> <span class="s2">"Helvetica Neue"</span><span class="o">,</span> <span class="n">Helvetica</span><span class="o">,</span> <span class="n">Arial</span><span class="o">,</span> <span class="nb">sans-serif</span><span class="p">;</span>&#x000A;&#x000A;<span class="nt">content</span> <span class="p">{</span>&#x000A;  <span class="k">@function</span> <span class="nf">contains-helvetica</span><span class="p">(</span><span class="nv">$string</span><span class="p">)</span> <span class="p">{</span>&#x000A;    <span class="k">@return</span> <span class="n">string</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="nv">$string</span><span class="o">,</span> <span class="s2">"Helvetica"</span><span class="p">);</span>&#x000A;  <span class="p">}</span>&#x000A;  <span class="nl">font-family</span><span class="p">:</span> <span class="nf">remove-where</span><span class="p">(</span><span class="nv">$fonts</span><span class="o">,</span> <span class="n">meta</span><span class="o">.</span><span class="nf">get-function</span><span class="p">(</span><span class="s2">"contains-helvetica"</span><span class="p">));</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-6-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@use</span> <span class="s2">"sass:list"</span>&#x000A;<span class="k">@use</span> <span class="s2">"sass:meta"</span>&#x000A;<span class="k">@use</span> <span class="s2">"sass:string"</span>&#x000A;&#x000A;<span class="c1">/// Return a copy of $list with all elements for which $condition returns `true`&#x000A;/// removed.&#x000A;</span><span class="k">@function</span> <span class="nf">remove-where</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$condition</span><span class="p">)</span>&#x000A;  <span class="nv">$new-list</span><span class="p">:</span> <span class="p">()</span>&#x000A;  <span class="nv">$separator</span><span class="p">:</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(</span><span class="nv">$list</span><span class="p">)</span>&#x000A;  <span class="k">@each</span> <span class="nv">$element</span> <span class="n">in</span> <span class="nv">$list</span>&#x000A;    <span class="k">@if</span> <span class="ow">not</span> <span class="n">meta</span><span class="o">.</span><span class="nf">call</span><span class="p">(</span><span class="nv">$condition</span><span class="o">,</span> <span class="nv">$element</span><span class="p">)</span>&#x000A;      <span class="nv">$new-list</span><span class="p">:</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="nv">$new-list</span><span class="o">,</span> <span class="nv">$element</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="nv">$separator</span><span class="p">)</span>&#x000A;&#x000A;&#x000A;  <span class="k">@return</span> <span class="nv">$new-list</span>&#x000A;&#x000A;&#x000A;<span class="nv">$fonts</span><span class="p">:</span> <span class="n">Tahoma</span><span class="o">,</span> <span class="n">Geneva</span><span class="o">,</span> <span class="s2">"Helvetica Neue"</span><span class="o">,</span> <span class="n">Helvetica</span><span class="o">,</span> <span class="n">Arial</span><span class="o">,</span> <span class="nb">sans-serif</span>&#x000A;&#x000A;<span class="nt">content</span>&#x000A;  <span class="k">@function</span> <span class="nf">contains-helvetica</span><span class="p">(</span><span class="nv">$string</span><span class="p">)</span>&#x000A;    <span class="k">@return</span> <span class="n">string</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="nv">$string</span><span class="o">,</span> <span class="s2">"Helvetica"</span><span class="p">)</span>&#x000A;&#x000A;  <span class="nl">font-family</span><span class="p">:</span> <span class="nf">remove-where</span><span class="p">(</span><span class="nv">$fonts</span><span class="o">,</span> <span class="n">meta</span><span class="o">.</span><span class="nf">get-function</span><span class="p">(</span><span class="s2">"contains-helvetica"</span><span class="p">))</span>&#x000A;&#x000A;</code></pre></div><div id=example-6-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nt">content</span> <span class="p">{</span>&#x000A;  <span class="nl">font-family</span><span class="p">:</span> <span class="n">Tahoma</span><span class="p">,</span> <span class="n">Geneva</span><span class="p">,</span> <span class="n">Arial</span><span class="p">,</span> <span class="nb">sans-serif</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=global-variable-exists><pre class="signature highlight scss"><a class="anchor" href="#global-variable-exists"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.global-variable-exists">global-variable-exists</span><span class="p">(</span><span class="nv">$name</span><span class="o">,</span> <span class="nv">$module</span><span class="o">:</span> <span class="n">null</span><span class="p">)</span>&#x0000A<span class="nf">global-variable-exists</span><span class="p">(</span><span class="nv">$name</span><span class="o">,</span> <span class="nv">$module</span><span class="o">:</span> <span class="n">null</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/booleans">boolean</a></span></code> </pre> <p>Returns whether a <a href="../variables#scope">global variable</a> named <code>$name</code> (without the <code>$</code>)&nbsp;exists.</p> <p>If <code>$module</code> is <code>null</code>, this returns whether a variable named <code>$name</code> without a namespace exists. Otherwise, <code>$module</code> must be a string matching the namespace of a <a href="../at-rules/use"><code>@use</code> rule</a> in the current file, in which case this returns whether that module has a variable named&nbsp;<code>$name</code>.</p> <p>See also <a href="#variable-exists"><code>meta.variable-exists()</code></a>.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-7-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-7-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-7-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">global-variable-exists</span><span class="p">(</span><span class="s2">"var1"</span><span class="p">);</span> <span class="c1">// false&#x000A;</span>&#x000A;<span class="nv">$var1</span><span class="p">:</span> <span class="n">value</span><span class="p">;</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">global-variable-exists</span><span class="p">(</span><span class="s2">"var1"</span><span class="p">);</span> <span class="c1">// true&#x000A;</span>&#x000A;<span class="nt">h1</span> <span class="p">{</span>&#x000A;  <span class="c1">// $var2 is local.&#x000A;</span>  <span class="nv">$var2</span><span class="p">:</span> <span class="n">value</span><span class="p">;</span>&#x000A;  <span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">global-variable-exists</span><span class="p">(</span><span class="s2">"var2"</span><span class="p">);</span> <span class="c1">// false&#x000A;</span><span class="p">}</span>&#x000A;</code></pre></div><div id=example-7-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">global-variable-exists</span><span class="p">(</span><span class="s2">"var1"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">false</span>&#x000A;&#x000A;<span class="nv">$var1</span><span class="p">:</span> <span class="n">value</span> &#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">global-variable-exists</span><span class="p">(</span><span class="s2">"var1"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">true</span>&#x000A;&#x000A;<span class="nt">h1</span>&#x000A;  <span class="c1">// $var2 is local.&#x000A;</span>  <span class="nv">$var2</span><span class="p">:</span> <span class="n">value</span>&#x000A;  <span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">global-variable-exists</span><span class="p">(</span><span class="s2">"var2"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">false</span>&#x000A;&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=inspect><pre class="signature highlight scss"><a class="anchor" href="#inspect"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.inspect">inspect</span><span class="p">(</span><span class="nv">$value</span><span class="p">)</span>&#x0000A<span class="nf">inspect</span><span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/strings#unquoted">unquoted string</a></span></code> </pre> <p>Returns a string representation of&nbsp;<code>$value</code>.</p> <p>Returns a representation of <em>any</em> Sass value, not just those that can be represented in <span class=caps>CSS.</span> As such, its return value is not guaranteed to be valid&nbsp;<span class=caps>CSS.</span></p> <div class="sl-c-callout sl-c-callout--warning"><h3>⚠️ Heads&nbsp;up!</h3> <p>This function is intended for debugging; its output format is not guaranteed to be consistent across Sass versions or&nbsp;implementations.</p> </div> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-8-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-8-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-8-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">inspect</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span><span class="p">);</span> <span class="c1">// unquote("10px 20px 30px")&#x000A;</span><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">inspect</span><span class="p">((</span><span class="s2">"width"</span><span class="o">:</span> <span class="m">200px</span><span class="p">));</span> <span class="c1">// unquote('("width": 200px)')&#x000A;</span><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">inspect</span><span class="p">(</span><span class="n">null</span><span class="p">);</span> <span class="c1">// unquote("null")&#x000A;</span><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">inspect</span><span class="p">(</span><span class="s2">"Helvetica"</span><span class="p">);</span> <span class="c1">// unquote('"Helvetica"')&#x000A;</span></code></pre></div><div id=example-8-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">inspect</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span><span class="p">)</span>  <span class="o">//</span> <span class="nf">unquote</span><span class="p">(</span><span class="s2">"10px 20px 30px"</span><span class="p">)</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">inspect</span><span class="p">((</span><span class="s2">"width"</span><span class="o">:</span> <span class="m">200px</span><span class="p">))</span>  <span class="o">//</span> <span class="nf">unquote</span><span class="p">(</span><span class="s1">'("width": 200px)'</span><span class="p">)</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">inspect</span><span class="p">(</span><span class="n">null</span><span class="p">)</span>  <span class="o">//</span> <span class="nf">unquote</span><span class="p">(</span><span class="s2">"null"</span><span class="p">)</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">inspect</span><span class="p">(</span><span class="s2">"Helvetica"</span><span class="p">)</span>  <span class="o">//</span> <span class="nf">unquote</span><span class="p">(</span><span class="s1">'"Helvetica"'</span><span class="p">)</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=keywords><pre class="signature highlight scss"><a class="anchor" href="#keywords"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.keywords">keywords</span><span class="p">(</span><span class="nv">$args</span><span class="p">)</span>&#x0000A<span class="nf">keywords</span><span class="p">(</span><span class="nv">$args</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/maps">map</a></span></code> </pre> <p>Returns the keywords passed to a mixin or function that takes <a href="../at-rules/mixin#taking-arbitrary-arguments">arbitrary arguments</a>. The <code>$args</code> argument must be an <a href="../values/lists#argument-lists">argument list</a>.</p> <p>The keywords are returned as a map from argument names as unquoted strings (not including <code>$</code>) to the values of those&nbsp;arguments.</p> <div class="code-example ui-tabs can-split" style="--split-location: 71.36363636363636%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-9-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-9-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-9-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-9-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@use</span> <span class="s2">"sass:meta"</span><span class="p">;</span>&#x000A;&#x000A;<span class="k">@mixin</span> <span class="nf">syntax-colors</span><span class="p">(</span><span class="nv">$args</span><span class="o">...</span><span class="p">)</span> <span class="p">{</span>&#x000A;  <span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">keywords</span><span class="p">(</span><span class="nv">$args</span><span class="p">);</span>&#x000A;  <span class="c1">// (string: #080, comment: #800, $variable: $60b)&#x000A;</span>&#x000A;  <span class="k">@each</span> <span class="nv">$name</span><span class="o">,</span> <span class="nv">$color</span> <span class="n">in</span> <span class="n">meta</span><span class="o">.</span><span class="nf">keywords</span><span class="p">(</span><span class="nv">$args</span><span class="p">)</span> <span class="p">{</span>&#x000A;    <span class="nt">pre</span> <span class="nt">span</span><span class="nc">.stx-</span><span class="si">#{</span><span class="nv">$name</span><span class="si">}</span> <span class="p">{</span>&#x000A;      <span class="nl">color</span><span class="p">:</span> <span class="nv">$color</span><span class="p">;</span>&#x000A;    <span class="p">}</span>&#x000A;  <span class="p">}</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="k">@include</span> <span class="nd">syntax-colors</span><span class="p">(</span>&#x000A;  <span class="nv">$string</span><span class="o">:</span> <span class="mh">#080</span><span class="o">,</span>&#x000A;  <span class="nv">$comment</span><span class="o">:</span> <span class="mh">#800</span><span class="o">,</span>&#x000A;  <span class="nv">$variable</span><span class="o">:</span> <span class="mh">#60b</span><span class="o">,</span>&#x000A;<span class="p">)</span>&#x000A;</code></pre></div><div id=example-9-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@use</span> <span class="s2">"sass:meta"</span>&#x000A;&#x000A;<span class="k">@mixin</span> <span class="nf">syntax-colors</span><span class="p">(</span><span class="nv">$args</span><span class="o">...</span><span class="p">)</span>&#x000A;  <span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">keywords</span><span class="p">(</span><span class="nv">$args</span><span class="p">)</span>&#x000A;  <span class="c1">// (string: #080, comment: #800, $variable: $60b)&#x000A;</span>&#x000A;  <span class="k">@each</span> <span class="nv">$name</span><span class="o">,</span> <span class="nv">$color</span> <span class="n">in</span> <span class="n">meta</span><span class="o">.</span><span class="nf">keywords</span><span class="p">(</span><span class="nv">$args</span><span class="p">)</span>&#x000A;    <span class="nt">pre</span> <span class="nt">span</span><span class="nc">.stx-</span><span class="si">#{</span><span class="nv">$name</span><span class="si">}</span>&#x000A;      <span class="nl">color</span><span class="p">:</span> <span class="nv">$color</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;<span class="k">@include</span> <span class="nd">syntax-colors</span><span class="p">(</span><span class="nv">$string</span><span class="o">:</span> <span class="mh">#080</span><span class="o">,</span> <span class="nv">$comment</span><span class="o">:</span> <span class="mh">#800</span><span class="o">,</span> <span class="nv">$variable</span><span class="o">:</span> <span class="mh">#60b</span><span class="p">)</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div><div id=example-9-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nt">pre</span> <span class="nt">span</span><span class="nc">.stx-string</span> <span class="p">{</span>&#x000A;  <span class="nl">color</span><span class="p">:</span> <span class="m">#080</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nt">pre</span> <span class="nt">span</span><span class="nc">.stx-comment</span> <span class="p">{</span>&#x000A;  <span class="nl">color</span><span class="p">:</span> <span class="m">#800</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nt">pre</span> <span class="nt">span</span><span class="nc">.stx-variable</span> <span class="p">{</span>&#x000A;  <span class="nl">color</span><span class="p">:</span> <span class="m">#60b</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=mixin-exists><pre class="signature highlight scss"><a class="anchor" href="#mixin-exists"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.mixin-exists">mixin-exists</span><span class="p">(</span><span class="nv">$name</span><span class="o">,</span> <span class="nv">$module</span><span class="o">:</span> <span class="n">null</span><span class="p">)</span>&#x0000A<span class="nf">mixin-exists</span><span class="p">(</span><span class="nv">$name</span><span class="o">,</span> <span class="nv">$module</span><span class="o">:</span> <span class="n">null</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/booleans">boolean</a></span></code> </pre> <p>Returns whether a <a href="../at-rules/mixin">mixin</a> named <code>$name</code>&nbsp;exists.</p> <p>If <code>$module</code> is <code>null</code>, this returns whether a mixin named <code>$name</code> without a namespace exists. Otherwise, <code>$module</code> must be a string matching the namespace of a <a href="../at-rules/use"><code>@use</code> rule</a> in the current file, in which case this returns whether that module has a mixin named&nbsp;<code>$name</code>.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-10-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-10-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-10-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">mixin-exists</span><span class="p">(</span><span class="s2">"shadow-none"</span><span class="p">);</span> <span class="c1">// false&#x000A;</span>&#x000A;<span class="k">@mixin</span> <span class="nf">shadow-none</span> <span class="p">{</span>&#x000A;  <span class="nl">box-shadow</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">mixin-exists</span><span class="p">(</span><span class="s2">"shadow-none"</span><span class="p">);</span> <span class="c1">// true&#x000A;</span></code></pre></div><div id=example-10-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">mixin-exists</span><span class="p">(</span><span class="s2">"shadow-none"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">false</span>&#x000A;&#x000A;<span class="k">@mixin</span> <span class="nf">shadow-none</span>&#x000A;  <span class="nl">box-shadow</span><span class="p">:</span> <span class="nb">none</span>&#x000A;&#x000A;&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">mixin-exists</span><span class="p">(</span><span class="s2">"shadow-none"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">true</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=module-functions><pre class="signature highlight scss"><a class="anchor" href="#module-functions"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.module-functions">module-functions</span><span class="p">(</span><span class="nv">$module</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/maps">map</a></span></code> </pre> <dl class="impl-status sl-c-description-list sl-c-description-list--horizontal"><div class=compatibility>Compatibility:</div> <div><dt>Dart&nbsp;Sass</dt> <dd>since&nbsp;<span class=caps>1.23.0</span></dd> </div> <div><dt>LibSass</dt> <dd>✗</dd> </div> <div><dt>Ruby&nbsp;Sass</dt> <dd>✗</dd> </div> <div><a>▶</a></div> </dl> <div class="sl-c-callout sl-c-callout--impl-status"><p>Only Dart Sass currently supports this&nbsp;function.</p></div> <p>Returns all the functions defined in a module, as a map from function names to <a href="../values/functions">function values</a>.</p> <p>The <code>$module</code> parameter must be a string matching the namespace of a <a href="../at-rules/use"><code>@use</code> rule</a> in the current&nbsp;file.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-11-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-11-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-11-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="c1">// _functions.scss&#x000A;</span><span class="k">@function</span> <span class="nf">pow</span><span class="p">(</span><span class="nv">$base</span><span class="o">,</span> <span class="nv">$exponent</span><span class="p">)</span> <span class="p">{</span>&#x000A;  <span class="nv">$result</span><span class="p">:</span> <span class="m">1</span><span class="p">;</span>&#x000A;  <span class="k">@for</span> <span class="nv">$_</span> <span class="ow">from</span> <span class="m">1</span> <span class="ow">through</span> <span class="nv">$exponent</span> <span class="p">{</span>&#x000A;    <span class="nv">$result</span><span class="p">:</span> <span class="nv">$result</span> <span class="o">*</span> <span class="nv">$base</span><span class="p">;</span>&#x000A;  <span class="p">}</span>&#x000A;  <span class="k">@return</span> <span class="nv">$result</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre><pre class="highlight scss"><code><span class="k">@use</span> <span class="s2">"sass:map"</span><span class="p">;</span>&#x000A;<span class="k">@use</span> <span class="s2">"sass:meta"</span><span class="p">;</span>&#x000A;&#x000A;<span class="k">@use</span> <span class="s2">"functions"</span><span class="p">;</span>&#x000A;&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">module-functions</span><span class="p">(</span><span class="s2">"functions"</span><span class="p">);</span> <span class="c1">// ("pow": get-function("pow"))&#x000A;</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">call</span><span class="p">(</span><span class="n">map</span><span class="o">.</span><span class="nf">get</span><span class="p">(</span><span class="n">meta</span><span class="o">.</span><span class="nf">module-variables</span><span class="p">(</span><span class="s2">"functions"</span><span class="p">)</span><span class="o">,</span> <span class="s2">"pow"</span><span class="p">)</span><span class="o">,</span> <span class="m">3</span><span class="o">,</span> <span class="m">4</span><span class="p">);</span> <span class="c1">// 16&#x000A;</span></code></pre></div><div id=example-11-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="c1">// _functions.sass&#x000A;</span><span class="k">@function</span> <span class="nf">pow</span><span class="p">(</span><span class="nv">$base</span><span class="o">,</span> <span class="nv">$exponent</span><span class="p">)</span>&#x000A;  <span class="nv">$result</span><span class="p">:</span> <span class="m">1</span>&#x000A;  <span class="k">@for</span> <span class="nv">$_</span> <span class="ow">from</span> <span class="m">1</span> <span class="ow">through</span> <span class="nv">$exponent</span>&#x000A;    <span class="nv">$result</span><span class="p">:</span> <span class="nv">$result</span> <span class="o">*</span> <span class="nv">$base</span>&#x000A;&#x000A;  <span class="k">@return</span> <span class="nv">$result</span>&#x000A;&#x000A;</code></pre><pre class="highlight sass"><code><span class="k">@use</span> <span class="s2">"sass:map"</span>&#x000A;<span class="k">@use</span> <span class="s2">"sass:meta"</span>&#x000A;&#x000A;<span class="k">@use</span> <span class="s2">"functions"</span>&#x000A;&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">module-functions</span><span class="p">(</span><span class="s2">"functions"</span><span class="p">)</span> <span class="o">//</span> <span class="p">(</span><span class="s2">"pow"</span><span class="o">:</span> <span class="nf">get-function</span><span class="p">(</span><span class="s2">"pow"</span><span class="p">))</span>&#x000A;&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">call</span><span class="p">(</span><span class="n">map</span><span class="o">.</span><span class="nf">get</span><span class="p">(</span><span class="n">meta</span><span class="o">.</span><span class="nf">module-variables</span><span class="p">(</span><span class="s2">"functions"</span><span class="p">)</span><span class="o">,</span> <span class="s2">"pow"</span><span class="p">)</span><span class="o">,</span> <span class="m">3</span><span class="o">,</span> <span class="m">4</span><span class="p">)</span> <span class="o">//</span> <span class="m">16</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=module-variables><pre class="signature highlight scss"><a class="anchor" href="#module-variables"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.module-variables">module-variables</span><span class="p">(</span><span class="nv">$module</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/maps">map</a></span></code> </pre> <dl class="impl-status sl-c-description-list sl-c-description-list--horizontal"><div class=compatibility>Compatibility:</div> <div><dt>Dart&nbsp;Sass</dt> <dd>since&nbsp;<span class=caps>1.23.0</span></dd> </div> <div><dt>LibSass</dt> <dd>✗</dd> </div> <div><dt>Ruby&nbsp;Sass</dt> <dd>✗</dd> </div> <div><a>▶</a></div> </dl> <div class="sl-c-callout sl-c-callout--impl-status"><p>Only Dart Sass currently supports this&nbsp;function.</p></div> <p>Returns all the variables defined in a module, as a map from variable names (without <code>$</code>) to the values of those&nbsp;variables.</p> <p>The <code>$module</code> parameter must be a string matching the namespace of a <a href="../at-rules/use"><code>@use</code> rule</a> in the current&nbsp;file.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-12-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-12-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-12-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="c1">// _variables.scss&#x000A;</span><span class="nv">$hopbush</span><span class="p">:</span> <span class="mh">#c69</span><span class="p">;</span>&#x000A;<span class="nv">$midnight-blue</span><span class="p">:</span> <span class="mh">#036</span><span class="p">;</span>&#x000A;<span class="nv">$wafer</span><span class="p">:</span> <span class="mh">#e1d7d2</span><span class="p">;</span>&#x000A;</code></pre><pre class="highlight scss"><code><span class="k">@use</span> <span class="s2">"sass:meta"</span><span class="p">;</span>&#x000A;&#x000A;<span class="k">@use</span> <span class="s2">"variables"</span><span class="p">;</span>&#x000A;&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">module-variables</span><span class="p">(</span><span class="s2">"variables"</span><span class="p">);</span>&#x000A;<span class="c1">// (&#x000A;//   "hopbush": #c69,&#x000A;//   "midnight-blue": #036,&#x000A;//   "wafer": #e1d7d2&#x000A;// )&#x000A;</span></code></pre></div><div id=example-12-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="c1">// _variables.sass&#x000A;</span><span class="nv">$hopbush</span><span class="p">:</span> <span class="mh">#c69</span>&#x000A;<span class="nv">$midnight-blue</span><span class="p">:</span> <span class="mh">#036</span>&#x000A;<span class="nv">$wafer</span><span class="p">:</span> <span class="mh">#e1d7d2</span>&#x000A;</code></pre><pre class="highlight sass"><code><span class="k">@use</span> <span class="s2">"sass:meta"</span>&#x000A;&#x000A;<span class="k">@use</span> <span class="s2">"variables"</span>&#x000A;&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">module-variables</span><span class="p">(</span><span class="s2">"variables"</span><span class="p">)</span>&#x000A;<span class="c1">// (&#x000A;//   "hopbush": #c69,&#x000A;//   "midnight-blue": #036,&#x000A;//   "wafer": #e1d7d2&#x000A;// )&#x000A;</span></code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=type-of><pre class="signature highlight scss"><a class="anchor" href="#type-of"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.type-of">type-of</span><span class="p">(</span><span class="nv">$value</span><span class="p">)</span>&#x0000A<span class="nf">type-of</span><span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/strings#unquoted">unquoted string</a></span></code> </pre> <p>Returns the type of&nbsp;<code>$value</code>.</p> <p>This can return the following&nbsp;values:</p> <ul> <li><a href="../values/numbers"><code>number</code></a></li> <li><a href="../values/strings"><code>string</code></a></li> <li><a href="../values/colors"><code>color</code></a></li> <li><a href="../values/lists"><code>list</code></a></li> <li><a href="../values/maps"><code>map</code></a></li> <li><a href="../values/booleans"><code>bool</code></a></li> <li><a href="../values/null"><code>null</code></a></li> <li><a href="../values/functions"><code>function</code></a></li> <li><a href="../values/lists#argument-lists"><code>arglist</code></a></li> </ul> <p>New possible values may be added in the future. It may return either <code>list</code> or <code>map</code> for <code>()</code>, depending on whether or not it was returned by a <a href=map>map function</a>.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-13-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-13-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-13-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">type-of</span><span class="p">(</span><span class="m">10px</span><span class="p">);</span> <span class="c1">// number&#x000A;</span><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">type-of</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span><span class="p">);</span> <span class="c1">// list&#x000A;</span><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">type-of</span><span class="p">(());</span> <span class="c1">// list&#x000A;</span></code></pre></div><div id=example-13-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">type-of</span><span class="p">(</span><span class="m">10px</span><span class="p">)</span>  <span class="o">//</span> <span class="n">number</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">type-of</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span><span class="p">)</span>  <span class="o">//</span> <span class="n">list</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">type-of</span><span class="p">(())</span>  <span class="o">//</span> <span class="n">list</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=variable-exists><pre class="signature highlight scss"><a class="anchor" href="#variable-exists"></a><code><span class="nf">meta</span><span class="o">.</span><span class="nf .docSearch-function" name="meta.variable-exists">variable-exists</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span>&#x0000A<span class="nf">variable-exists</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/booleans">boolean</a></span></code> </pre> <p>Returns whether a variable named <code>$name</code> (without the <code>$</code>) exists in the current <a href="../variables#scope">scope</a>.</p> <p>See also <a href="#global-variable-exists"><code>meta.global-variable-exists()</code></a>.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-14-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-14-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-14-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">variable-exists</span><span class="p">(</span><span class="s2">"var1"</span><span class="p">);</span> <span class="c1">// false&#x000A;</span>&#x000A;<span class="nv">$var1</span><span class="p">:</span> <span class="n">value</span><span class="p">;</span>&#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">variable-exists</span><span class="p">(</span><span class="s2">"var1"</span><span class="p">);</span> <span class="c1">// true&#x000A;</span>&#x000A;<span class="nt">h1</span> <span class="p">{</span>&#x000A;  <span class="c1">// $var2 is local.&#x000A;</span>  <span class="nv">$var2</span><span class="p">:</span> <span class="n">value</span><span class="p">;</span>&#x000A;  <span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">variable-exists</span><span class="p">(</span><span class="s2">"var2"</span><span class="p">);</span> <span class="c1">// true&#x000A;</span><span class="p">}</span>&#x000A;</code></pre></div><div id=example-14-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">variable-exists</span><span class="p">(</span><span class="s2">"var1"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">false</span>&#x000A;&#x000A;<span class="nv">$var1</span><span class="p">:</span> <span class="n">value</span> &#x000A;<span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">variable-exists</span><span class="p">(</span><span class="s2">"var1"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">true</span>&#x000A;&#x000A;<span class="nt">h1</span>&#x000A;  <span class="c1">// $var2 is local.&#x000A;</span>  <span class="nv">$var2</span><span class="p">:</span> <span class="n">value</span>&#x000A;  <span class="k">@debug</span> <span class="n">meta</span><span class="o">.</span><span class="nf">variable-exists</span><span class="p">(</span><span class="s2">"var2"</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">true</span>&#x000A;&#x000A;</code></pre></div></div> </div> </div> </div> </div> </div> </div> </div> </div> </div> <div class=sl-c-alert> <div aria-labelledby=release-nav class='sl-l-container sl-c-list-horizontal-wrapper'> <ul class=sl-l-grid--justify-center> <li id=release-nav> Current Releases: </li> <li> <span class=release-name><a href="/dart-sass">Dart Sass</a>&#32;<a href="https://github.com/sass/dart-sass/releases/tag/1.24.4">1.24.4</a></span> </li> <li> <span class=release-name><a href="/libsass">LibSass</a>&#32;<a href="https://github.com/sass/libsass/releases/tag/3.6.3">3.6.3</a></span> </li> <li> <span class=release-name><a href="/ruby-sass">Ruby Sass</a><span aria-label=coffin role=presentation> &#32; ⚰ </span></span> </li> <li class='sl-l-grid__column sl-l-large-grid__column--auto-size'> <a href="/implementation">Implementation Guide</a> </li> </ul> </div> </div> </main> <footer class='site-footer contentinfo' itemscope=itemscope itemtype='http://schema.org/WPFooter' role=contentinfo> <div class='sl-l-container sl-l-section'> <div class='sl-l-grid sl-l-grid--full sl-l-large-grid--fit sl-l-large-grid--center sl-l-large-grid--gutters'> <div class=sl-l-grid__column> <p>Sass &copy; 2006&ndash;2020 <a href="https://github.com/hcatlin">Hampton Catlin</a>, <a href="https://twitter.com/nex3">Natalie Weizenbaum</a>, <a href="http://chriseppstein.github.io/">Chris Eppstein</a>, <a href="https://www.sushiandrobots.com">Jina Anne</a>, and numerous contributors. It is available for use and modification under the <a href="https://github.com/sass/dart-sass/blob/master/LICENSE">MIT&nbsp;License</a>.</p> <nav class=sl-c-list-horizontal-wrapper> <ul> <li><a href="https://github.com/sass">Sass on GitHub</a></li> <li><a href="https://github.com/sass/sass-site">Website Source Code</a></li> <li><a href="/styleguide">Style Guide</a></li> <li><a href="/community-guidelines">Community Guidelines</a></li> </ul> </nav> </div> <div class='sl-l-grid__column sl-l-large-grid__column--auto-size sl-l-large-grid--justify-right'> <a class=twitter-follow-button data-show-count=false data-size=large href='https://twitter.com/SassCSS'> Follow @SassCSS </a> <script>
  !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
</script> </div> </div> </div> </footer> <script src="https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js"></script> <script>
  docsearch({
    apiKey: 'a409ff5d6a2476083c1a8dd1f8c04ec5',
    indexName: 'sass-lang',
    inputSelector: 'input.search',
    transformData: function(hits) {
      var domain = window.location.origin + "/";
      hits.forEach(function(hit) {
        if (!hit.url.startsWith(domain)) {
          hit.url = hit.url.replace(/^https?:\/\/[^\/]+\//, domain);
        }
      });
      return hits;
    },
    debug: false
  });
</script> <script src="/assets/js/sass-184dcd58.js"></script> </body> </html>