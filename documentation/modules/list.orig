<!DOCTYPE html> <html class=no-js lang=en> <head> <meta charset=utf-8> <meta content='IE=edge' http-equiv=X-UA-Compatible> <title>Sass: sass:list</title> <meta content='Syntatically Awesome Style Sheets' name=description> <meta content='width=device-width, initial-scale=1' name=viewport> <link href='/feed.xml' rel=alternate type='application/atom+xml'> <link href="https://fonts.googleapis.com/css?family=Source+Code+Pro|Source+Sans+Pro:300,400,600|Source+Serif+Pro" rel=stylesheet /> <link href="https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css" rel=stylesheet /> <link href="/assets/css/sass-6cc9628c.css" rel=stylesheet /> <noscript><link href="/assets/css/noscript-c6723936.css" rel=stylesheet /></noscript> <script>
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-535380-8']);
  _gaq.push(['_trackPageview']);
  
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script> <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  
  ga('create', 'UA-535380-14', 'sass-lang.com');
  ga('send', 'pageview');
</script> </head> <body class='documentation documentation_modules documentation_modules_list'> <!--[if lt IE 9]><p class=browserupgrade> You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience and security. </p><![endif]--> <header class=sl-r-banner itemscope=itemscope itemtype='http://schema.org/WPHeader' role=banner> <div class='sl-c-alert sl-c-alert--info'> <div class=sl-l-container> <p> Sass just launched a brand new module system. <a href="/blog/the-module-system-is-launched">Learn all about the module system on the Sass blog </a>! </p> </div> </div> <div class=sl-c-pop-stripe></div> <div class=sl-l-container> <div class='sl-l-grid sl-l-grid--full sl-l-large-grid--fit sl-l-large-grid--center sl-l-large-grid--gutters'> <p class='sl-l-grid__column sl-r-banner__brand'> <a href="/"><img alt=Sass height=48 src="/assets/img/logos/logo-b6e1ef6e.svg"/> </a></p> <nav aria-label='Site navigation' class='sl-r-banner__navigation sl-l-grid__column sl-l-large-grid sl-l-large-grid__column--auto-size sl-c-list-horizontal-wrapper' itemscope=itemscope itemtype='http://schema.org/SiteNavigationElement' role=navigation> <ul> <li><a href="/install">Install</a></li> <li><a href="/guide">Learn Sass</a></li> <li><a href="/blog">Blog</a></li> <li><a href="/documentation">Documentation</a></li> <li><a href="/community">Get Involved</a></li> <li><label class=visuallyhidden for=s>Search</label><input placeholder=Search class=search id=s name=s></li> </ul> </nav> </div> </div> </header> <main class=content id=main-content itemprop=mainContentOfPage role=main> <h1 class=sl-l-container> sass:list </h1> <div class='sl-background--white sl-l-container sl-l-section'><div class=sl-l-medium-holy-grail> <div class=sl-l-medium-holy-grail__body> <nav aria-label='Content navigation' class=sl-l-medium-holy-grail__navigation role=navigation> <div class='sl-c-list-navigation-wrapper sl-c-list-navigation-wrapper--collapsible'> <h2>Contents</h2> <ul><li><a href="/documentation/syntax" class=section>Syntax</a> <ul><li class=overview><a href="/documentation/syntax">Overview</a></li> <li><a href="/documentation/syntax/parsing" class="">Parsing a Stylesheet</a> </li> <li><a href="/documentation/syntax/structure" class="">Structure of a Stylesheet</a> </li> <li><a href="/documentation/syntax/comments" class="">Comments</a> </li> <li><a href="/documentation/syntax/special-functions" class="">Special Functions</a> </li> </ul> </li> <li><a href="/documentation/style-rules" class=section>Style Rules</a> <ul><li class=overview><a href="/documentation/style-rules">Overview</a></li> <li><a href="/documentation/style-rules/declarations" class="">Property Declarations</a> </li> <li><a href="/documentation/style-rules/parent-selector" class="">Parent Selector</a> </li> <li><a href="/documentation/style-rules/placeholder-selectors" class="">Placeholder Selectors</a> </li> </ul> </li> <li><a href="/documentation/variables" class="">Variables</a> </li> <li><a href="/documentation/interpolation" class="">Interpolation</a> </li> <li><a href="/documentation/at-rules" class=section>At-Rules</a> <ul><li class=overview><a href="/documentation/at-rules">Overview</a></li> <li><a href="/documentation/at-rules/use" class=""><code>@use</code></a> </li> <li><a href="/documentation/at-rules/forward" class=""><code>@forward</code></a> </li> <li><a href="/documentation/at-rules/import" class=""><code>@import</code></a> </li> <li><a href="/documentation/at-rules/mixin" class=""><code>@mixin</code> and <code>@include</code></a> </li> <li><a href="/documentation/at-rules/function" class=""><code>@function</code></a> </li> <li><a href="/documentation/at-rules/extend" class=""><code>@extend</code></a> </li> <li><a href="/documentation/at-rules/error" class=""><code>@error</code></a> </li> <li><a href="/documentation/at-rules/warn" class=""><code>@warn</code></a> </li> <li><a href="/documentation/at-rules/debug" class=""><code>@debug</code></a> </li> <li><a href="/documentation/at-rules/at-root" class=""><code>@at-root</code></a> </li> <li><a href="/documentation/at-rules/control" class=section>Flow Control</a> <ul><li class=overview><a href="/documentation/at-rules/control">Overview</a></li> <li><a href="/documentation/at-rules/control/if" class=""><code>@if</code> and <code>@else</code></a> </li> <li><a href="/documentation/at-rules/control/each" class=""><code>@each</code></a> </li> <li><a href="/documentation/at-rules/control/for" class=""><code>@for</code></a> </li> <li><a href="/documentation/at-rules/control/while" class=""><code>@while</code></a> </li> </ul> </li> <li><a href="/documentation/at-rules/css" class="">From CSS</a> </li> </ul> </li> <li><a href="/documentation/values" class=section>Values</a> <ul><li class=overview><a href="/documentation/values">Overview</a></li> <li><a href="/documentation/values/numbers" class="">Numbers</a> </li> <li><a href="/documentation/values/strings" class="">Strings</a> </li> <li><a href="/documentation/values/colors" class="">Colors</a> </li> <li><a href="/documentation/values/lists" class="">Lists</a> </li> <li><a href="/documentation/values/maps" class="">Maps</a> </li> <li><a href="/documentation/values/booleans" class=""><code>true</code> and <code>false</code></a> </li> <li><a href="/documentation/values/null" class=""><code>null</code></a> </li> <li><a href="/documentation/values/functions" class="">Functions</a> </li> </ul> </li> <li><a href="/documentation/operators" class=section>Operators</a> <ul><li class=overview><a href="/documentation/operators">Overview</a></li> <li><a href="/documentation/operators/equality" class="">Equality</a> </li> <li><a href="/documentation/operators/relational" class="">Relational</a> </li> <li><a href="/documentation/operators/numeric" class="">Numeric</a> </li> <li><a href="/documentation/operators/string" class="">String</a> </li> <li><a href="/documentation/operators/boolean" class="">Boolean</a> </li> </ul> </li> <li><a href="/documentation/modules" class="section open selected">Built-In Modules</a> <ul><li class=overview><a href="/documentation/modules">Overview</a></li> <li><a href="/documentation/modules/color" class=""><code>sass:color</code></a> </li> <li><a href="/documentation/modules/list" class="open selected"><code>sass:list</code></a> </li> <li><a href="/documentation/modules/map" class=""><code>sass:map</code></a> </li> <li><a href="/documentation/modules/math" class=""><code>sass:math</code></a> </li> <li><a href="/documentation/modules/meta" class=""><code>sass:meta</code></a> </li> <li><a href="/documentation/modules/selector" class=""><code>sass:selector</code></a> </li> <li><a href="/documentation/modules/string" class=""><code>sass:string</code></a> </li> </ul> </li> <li><a href="/documentation/breaking-changes" class=section>Breaking Changes</a> <ul><li class=overview><a href="/documentation/breaking-changes">Overview</a></li> <li><a href="/documentation/breaking-changes/extend-compound" class="">Extending Compound Selectors</a> </li> <li><a href="/documentation/breaking-changes/css-vars" class="">CSS Variable Syntax</a> </li> </ul> </li> <li><a href="/documentation/cli" class=section>Command Line</a> <ul><li class=overview><a href="/documentation/cli">Overview</a></li> <li><a href="/documentation/cli/dart-sass" class="">Dart Sass</a> </li> <li><a href="/documentation/cli/ruby-sass" class="">Ruby Sass</a> </li> <li><a href="/documentation/cli/migrator" class="">Migrator</a> </li> </ul> </li> <li><a href="/documentation/js-api" class="">JavaScript API</a> </li> </ul> </div> </nav> <div class=sl-l-medium-holy-grail__main> <div class=sl-l-large-holy-grail> <div class=sl-l-large-holy-grail__body> <div class='sl-l-large-holy-grail__main docSearch-content'> <div class='sl-l-container sl-l-container--small'> <dl class="impl-status sl-c-description-list sl-c-description-list--horizontal"><div class=compatibility>Compatibility:</div> <div><dt>Dart&nbsp;Sass</dt> <dd>since&nbsp;<span class=caps>1.23.0</span></dd> </div> <div><dt>LibSass</dt> <dd>✗</dd> </div> <div><dt>Ruby&nbsp;Sass</dt> <dd>✗</dd> </div> <div><a>▶</a></div> </dl> <div class="sl-c-callout sl-c-callout--impl-status"><p>Only Dart Sass currently supports loading built-in modules with <code>@use</code>. Users of other implementations must call functions using their global names&nbsp;instead.</p></div> <div class="sl-c-callout sl-c-callout--fun-fact"><h3>💡 Fun&nbsp;fact:</h3> <p>In Sass, every <a href="../values/maps">map</a> counts as a list that contains a two-element list for each key/value pair. For example, <code>(1: 2, 3: 4)</code> counts as <code>(1 2, 3 4)</code>. So all these functions work for maps as&nbsp;well!</p> <p>Individual values also count as lists. All these functions treat <code>1px</code> as a list that contains the value&nbsp;<code>1px</code>.</p> </div> <div class="sl-c-callout sl-c-callout--function" id=append><pre class="signature highlight scss"><a class="anchor" href="#append"></a><code><span class="nf">list</span><span class="o">.</span><span class="nf .docSearch-function" name="list.append">append</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$val</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="nb">auto</span><span class="p">)</span>&#x0000A<span class="nf">append</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$val</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="nb">auto</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/lists">list</a></span></code> </pre> <p>Returns a copy of <code>$list</code> with <code>$val</code> added to the&nbsp;end.</p> <p>If <code>$separator</code> is <code>comma</code>, the returned list is comma-separted. If it&rsquo;s <code>space</code>, the returned list is space-separated. If it&rsquo;s <code>auto</code> (the default), the returned list will use the same separator as <code>$list</code> (or <code>space</code> if <code>$list</code> doesn&rsquo;t have a separator). Other values aren&rsquo;t&nbsp;allowed.</p> <p>Note that unlike <a href="#join"><code>list.join()</code></a>, if <code>$val</code> is a list it&rsquo;s nested within the returned list rather than having all its elements added to the returned&nbsp;list.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-1-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-1-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-1-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span><span class="o">,</span> <span class="m">30px</span><span class="p">);</span> <span class="c1">// 10px 20px 30px&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">((</span><span class="no">blue</span><span class="o">,</span> <span class="no">red</span><span class="p">)</span><span class="o">,</span> <span class="no">green</span><span class="p">);</span> <span class="c1">// blue, red, green&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span><span class="o">,</span> <span class="m">30px</span> <span class="m">40px</span><span class="p">);</span> <span class="c1">// 10px 20px (30px 40px)&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="m">10px</span><span class="o">,</span> <span class="m">20px</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="n">comma</span><span class="p">);</span> <span class="c1">// 10px, 20px&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">((</span><span class="no">blue</span><span class="o">,</span> <span class="no">red</span><span class="p">)</span><span class="o">,</span> <span class="no">green</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="n">space</span><span class="p">);</span> <span class="c1">// blue red green&#x000A;</span></code></pre></div><div id=example-1-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span><span class="o">,</span> <span class="m">30px</span><span class="p">)</span>  <span class="o">//</span> <span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">((</span><span class="no">blue</span><span class="o">,</span> <span class="no">red</span><span class="p">)</span><span class="o">,</span> <span class="no">green</span><span class="p">)</span>  <span class="o">//</span> <span class="no">blue</span><span class="o">,</span> <span class="no">red</span><span class="o">,</span> <span class="no">green</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span><span class="o">,</span> <span class="m">30px</span> <span class="m">40px</span><span class="p">)</span>  <span class="o">//</span> <span class="m">10px</span> <span class="nf">20px</span> <span class="p">(</span><span class="m">30px</span> <span class="m">40px</span><span class="p">)</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="m">10px</span><span class="o">,</span> <span class="m">20px</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="n">comma</span><span class="p">)</span>  <span class="o">//</span> <span class="m">10px</span><span class="o">,</span> <span class="m">20px</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">append</span><span class="p">((</span><span class="no">blue</span><span class="o">,</span> <span class="no">red</span><span class="p">)</span><span class="o">,</span> <span class="no">green</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="n">space</span><span class="p">)</span>  <span class="o">//</span> <span class="no">blue</span> <span class="no">red</span> <span class="no">green</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=index><pre class="signature highlight scss"><a class="anchor" href="#index"></a><code><span class="nf">list</span><span class="o">.</span><span class="nf .docSearch-function" name="list.index">index</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$value</span><span class="p">)</span>&#x0000A<span class="nf">index</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$value</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/numbers">number</a> | <a href="/documentation/values/null"><code>null</code></a></span></code> </pre> <p>Returns the <a href="../values/lists#indexes">index</a> of <code>$value</code> in&nbsp;<code>$list</code>.</p> <p>If <code>$value</code> doesn&rsquo;t appear in <code>$list</code>, this returns <a href="../values/null"><code>null</code></a>. If <code>$value</code> appears multiple times in <code>$list</code>, this returns the index of its first&nbsp;appearance.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-2-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-2-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-2-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="m">1px</span> <span class="nb">solid</span> <span class="no">red</span><span class="o">,</span> <span class="m">1px</span><span class="p">);</span> <span class="c1">// 1&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="m">1px</span> <span class="nb">solid</span> <span class="no">red</span><span class="o">,</span> <span class="nb">solid</span><span class="p">);</span> <span class="c1">// 2&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="m">1px</span> <span class="nb">solid</span> <span class="no">red</span><span class="o">,</span> <span class="nb">dashed</span><span class="p">);</span> <span class="c1">// null&#x000A;</span></code></pre></div><div id=example-2-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="m">1px</span> <span class="nb">solid</span> <span class="no">red</span><span class="o">,</span> <span class="m">1px</span><span class="p">)</span>  <span class="o">//</span> <span class="m">1</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="m">1px</span> <span class="nb">solid</span> <span class="no">red</span><span class="o">,</span> <span class="nb">solid</span><span class="p">)</span>  <span class="o">//</span> <span class="m">2</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">index</span><span class="p">(</span><span class="m">1px</span> <span class="nb">solid</span> <span class="no">red</span><span class="o">,</span> <span class="nb">dashed</span><span class="p">)</span>  <span class="o">//</span> <span class="n">null</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=is-bracketed><pre class="signature highlight scss"><a class="anchor" href="#is-bracketed"></a><code><span class="nf">list</span><span class="o">.</span><span class="nf .docSearch-function" name="list.is-bracketed">is-bracketed</span><span class="p">(</span><span class="nv">$list</span><span class="p">)</span>&#x0000A<span class="nf">is-bracketed</span><span class="p">(</span><span class="nv">$list</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/booleans">boolean</a></span></code> </pre> <p>Returns whether <code>$list</code> has square&nbsp;brackets.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-3-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-3-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-3-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">is-bracketed</span><span class="p">(</span><span class="m">1px</span> <span class="m">2px</span> <span class="m">3px</span><span class="p">);</span> <span class="c1">// false&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">is-bracketed</span><span class="p">([</span><span class="m">1px</span><span class="o">,</span> <span class="m">2px</span><span class="o">,</span> <span class="m">3px</span><span class="p">]);</span> <span class="c1">// true&#x000A;</span></code></pre></div><div id=example-3-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">is-bracketed</span><span class="p">(</span><span class="m">1px</span> <span class="m">2px</span> <span class="m">3px</span><span class="p">)</span>  <span class="o">//</span> <span class="bp">false</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">is-bracketed</span><span class="p">([</span><span class="m">1px</span><span class="o">,</span> <span class="m">2px</span><span class="o">,</span> <span class="m">3px</span><span class="p">])</span>  <span class="o">//</span> <span class="bp">true</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=join><pre class="signature highlight scss"><a class="anchor" href="#join"></a><code><span class="nf">list</span><span class="o">.</span><span class="nf .docSearch-function" name="list.join">join</span><span class="p">(</span><span class="nv">$list1</span><span class="o">,</span> <span class="nv">$list2</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="nb">auto</span><span class="o">,</span> <span class="nv">$bracketed</span><span class="o">:</span> <span class="nb">auto</span><span class="p">)</span>&#x0000A<span class="nf">join</span><span class="p">(</span><span class="nv">$list1</span><span class="o">,</span> <span class="nv">$list2</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="nb">auto</span><span class="o">,</span> <span class="nv">$bracketed</span><span class="o">:</span> <span class="nb">auto</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/lists">list</a></span></code> </pre> <p>Returns a new list containing the elements of <code>$list1</code> followed by the elements of&nbsp;<code>$list2</code>.</p> <div class="sl-c-callout sl-c-callout--warning"><h3>⚠️ Heads&nbsp;up!</h3> <p>Because individual values count as single-element lists, it&rsquo;s possible to use <code>list.join()</code> to add a value to the end of a list. However, <em>this is not recommended</em>, since if that value is a list it will be concatenated, which is probably not what you&rsquo;re&nbsp;expecting.</p> <p>Use <a href="#append"><code>list.append()</code></a> instead to add a single value to a list. Only use <code>list.join()</code> to combine two lists together into&nbsp;one.</p> </div> <p>If <code>$separator</code> is <code>comma</code>, the returned list is comma-separted. If it&rsquo;s <code>space</code>, the returned list is space-separated. If it&rsquo;s <code>auto</code> (the default), the returned list will use the same separator as <code>$list1</code> if it has a separator, or else <code>$list2</code> if it has a separator, or else <code>space</code>. Other values aren&rsquo;t&nbsp;allowed.</p> <p>If <code>$bracketed</code> is <code>true</code>, the returned list has square brackets. If it&rsquo;s <code>false</code>, the returned list has no brackets. If it&rsquo;s <code>auto</code> (the default), the returned list will be bracketed if <code>$list1</code> is. Other values aren&rsquo;t&nbsp;allowed.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-4-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-4-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-4-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span><span class="o">,</span> <span class="m">30px</span> <span class="m">40px</span><span class="p">);</span> <span class="c1">// 10px 20px 30px 40px&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">((</span><span class="no">blue</span><span class="o">,</span> <span class="no">red</span><span class="p">)</span><span class="o">,</span> <span class="p">(</span><span class="mh">#abc</span><span class="o">,</span> <span class="mh">#def</span><span class="p">));</span> <span class="c1">// blue, red, #abc, #def&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="m">10px</span><span class="o">,</span> <span class="m">20px</span><span class="p">);</span> <span class="c1">// 10px 20px&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="m">10px</span><span class="o">,</span> <span class="m">20px</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="n">comma</span><span class="p">);</span> <span class="c1">// 10px, 20px&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">((</span><span class="no">blue</span><span class="o">,</span> <span class="no">red</span><span class="p">)</span><span class="o">,</span> <span class="p">(</span><span class="mh">#abc</span><span class="o">,</span> <span class="mh">#def</span><span class="p">)</span><span class="o">,</span> <span class="nv">$separator</span><span class="o">:</span> <span class="n">space</span><span class="p">);</span> <span class="c1">// blue red #abc #def&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">([</span><span class="m">10px</span><span class="p">]</span><span class="o">,</span> <span class="m">20px</span><span class="p">);</span> <span class="c1">// [10px 20px]&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="m">10px</span><span class="o">,</span> <span class="m">20px</span><span class="o">,</span> <span class="nv">$bracketed</span><span class="o">:</span> <span class="bp">true</span><span class="p">);</span> <span class="c1">// [10px 20px]&#x000A;</span></code></pre></div><div id=example-4-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span><span class="o">,</span> <span class="m">30px</span> <span class="m">40px</span><span class="p">)</span>  <span class="o">//</span> <span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span> <span class="m">40px</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">((</span><span class="no">blue</span><span class="o">,</span> <span class="no">red</span><span class="p">)</span><span class="o">,</span> <span class="p">(</span><span class="mh">#abc</span><span class="o">,</span> <span class="mh">#def</span><span class="p">))</span>  <span class="o">//</span> <span class="no">blue</span><span class="o">,</span> <span class="no">red</span><span class="o">,</span> <span class="mh">#abc</span><span class="o">,</span> <span class="mh">#def</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="m">10px</span><span class="o">,</span> <span class="m">20px</span><span class="p">)</span>  <span class="o">//</span> <span class="m">10px</span> <span class="m">20px</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="m">10px</span><span class="o">,</span> <span class="m">20px</span><span class="o">,</span> <span class="n">comma</span><span class="p">)</span>  <span class="o">//</span> <span class="m">10px</span><span class="o">,</span> <span class="m">20px</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">((</span><span class="no">blue</span><span class="o">,</span> <span class="no">red</span><span class="p">)</span><span class="o">,</span> <span class="p">(</span><span class="mh">#abc</span><span class="o">,</span> <span class="mh">#def</span><span class="p">)</span><span class="o">,</span> <span class="n">space</span><span class="p">)</span>  <span class="o">//</span> <span class="no">blue</span> <span class="no">red</span> <span class="mh">#abc</span> <span class="mh">#def</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">([</span><span class="m">10px</span><span class="p">]</span><span class="o">,</span> <span class="m">20px</span><span class="p">)</span>  <span class="o">//</span> <span class="p">[</span><span class="m">10px</span> <span class="m">20px</span><span class="p">]</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">join</span><span class="p">(</span><span class="m">10px</span><span class="o">,</span> <span class="m">20px</span><span class="o">,</span> <span class="nv">$bracketed</span><span class="o">:</span> <span class="bp">true</span><span class="p">)</span>  <span class="o">//</span> <span class="p">[</span><span class="m">10px</span> <span class="m">20px</span><span class="p">]</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=length><pre class="signature highlight scss"><a class="anchor" href="#length"></a><code><span class="nf">list</span><span class="o">.</span><span class="nf .docSearch-function" name="list.length">length</span><span class="p">(</span><span class="nv">$list</span><span class="p">)</span>&#x0000A<span class="nf">length</span><span class="p">(</span><span class="nv">$list</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/numbers">number</a></span></code> </pre> <p>Returns the length of&nbsp;<code>$list</code>.</p> <p>This can also return the number of pairs in a&nbsp;map.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-5-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-5-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-5-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">length</span><span class="p">(</span><span class="m">10px</span><span class="p">);</span> <span class="c1">// 1&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">length</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span><span class="p">);</span> <span class="c1">// 3&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">length</span><span class="p">((</span><span class="n">width</span><span class="o">:</span> <span class="m">10px</span><span class="o">,</span> <span class="n">height</span><span class="o">:</span> <span class="m">20px</span><span class="p">));</span> <span class="c1">// 2&#x000A;</span></code></pre></div><div id=example-5-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">length</span><span class="p">(</span><span class="m">10px</span><span class="p">)</span>  <span class="o">//</span> <span class="m">1</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">length</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span><span class="p">)</span>  <span class="o">//</span> <span class="m">3</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">length</span><span class="p">((</span><span class="n">width</span><span class="o">:</span> <span class="m">10px</span><span class="o">,</span> <span class="n">height</span><span class="o">:</span> <span class="m">20px</span><span class="p">))</span>  <span class="o">//</span> <span class="m">2</span>&#x000A;</code></pre></div></div> </div> <div id=list-separator><div class="sl-c-callout sl-c-callout--function" id=separator><pre class="signature highlight scss"><a class="anchor" href="#separator"></a><code><span class="nf">list</span><span class="o">.</span><span class="nf .docSearch-function" name="list.separator">separator</span><span class="p">(</span><span class="nv">$list</span><span class="p">)</span>&#x0000A<span class="nf .docSearch-function" name="list-separator">list-separator</span><span class="p">(</span><span class="nv">$list</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/strings#unquoted">unquoted string</a></span></code> </pre> <p>Returns the name of the separator used by <code>$list</code>, either <code>space</code> or&nbsp;<code>comma</code>.</p> <p>If <code>$list</code> doesn&rsquo;t have a separator, returns&nbsp;<code>space</code>.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-6-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-6-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-6-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(</span><span class="m">1px</span> <span class="m">2px</span> <span class="m">3px</span><span class="p">);</span> <span class="c1">// space&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(</span><span class="m">1px</span><span class="o">,</span> <span class="m">2px</span><span class="o">,</span> <span class="m">3px</span><span class="p">);</span> <span class="c1">// comma&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(</span><span class="s1">'Helvetica'</span><span class="p">);</span> <span class="c1">// space&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(());</span> <span class="c1">// space&#x000A;</span></code></pre></div><div id=example-6-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(</span><span class="m">1px</span> <span class="m">2px</span> <span class="m">3px</span><span class="p">)</span>  <span class="o">//</span> <span class="n">space</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(</span><span class="m">1px</span><span class="o">,</span> <span class="m">2px</span><span class="o">,</span> <span class="m">3px</span><span class="p">)</span>  <span class="o">//</span> <span class="n">comma</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(</span><span class="s1">'Helvetica'</span><span class="p">)</span>  <span class="o">//</span> <span class="n">space</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">separator</span><span class="p">(())</span>  <span class="o">//</span> <span class="n">space</span>&#x000A;</code></pre></div></div> </div></div> <div class="sl-c-callout sl-c-callout--function" id=nth><pre class="signature highlight scss"><a class="anchor" href="#nth"></a><code><span class="nf">list</span><span class="o">.</span><span class="nf .docSearch-function" name="list.nth">nth</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$n</span><span class="p">)</span>&#x0000A<span class="nf">nth</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$n</span><span class="p">)</span></code> </pre> <p>Returns the element of <code>$list</code> at <a href="../values/lists#indexes">index</a>&nbsp;<code>$n</code>.</p> <p>If <code>$n</code> is negative, it counts from the end of <code>$list</code>. Throws an error if there is no element at index&nbsp;<code>$n</code>.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-7-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-7-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-7-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">nth</span><span class="p">(</span><span class="m">10px</span> <span class="m">12px</span> <span class="m">16px</span><span class="o">,</span> <span class="m">2</span><span class="p">);</span> <span class="c1">// 12px&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">nth</span><span class="p">([</span><span class="n">line1</span><span class="o">,</span> <span class="n">line2</span><span class="o">,</span> <span class="n">line3</span><span class="p">]</span><span class="o">,</span> <span class="m">-1</span><span class="p">);</span> <span class="c1">// line3&#x000A;</span></code></pre></div><div id=example-7-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">nth</span><span class="p">(</span><span class="m">10px</span> <span class="m">12px</span> <span class="m">16px</span><span class="o">,</span> <span class="m">2</span><span class="p">)</span>  <span class="o">//</span> <span class="m">12px</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">nth</span><span class="p">([</span><span class="n">line1</span><span class="o">,</span> <span class="n">line2</span><span class="o">,</span> <span class="n">line3</span><span class="p">]</span><span class="o">,</span> <span class="m">-1</span><span class="p">)</span>  <span class="o">//</span> <span class="n">line3</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=set-nth><pre class="signature highlight scss"><a class="anchor" href="#set-nth"></a><code><span class="nf">list</span><span class="o">.</span><span class="nf .docSearch-function" name="list.set-nth">set-nth</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$n</span><span class="o">,</span> <span class="nv">$value</span><span class="p">)</span>&#x0000A<span class="nf">set-nth</span><span class="p">(</span><span class="nv">$list</span><span class="o">,</span> <span class="nv">$n</span><span class="o">,</span> <span class="nv">$value</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/lists">list</a></span></code> </pre> <p>Returns a copy of <code>$list</code> with the element at <a href="../values/lists#indexes">index</a> <code>$n</code> replaced with&nbsp;<code>$value</code>.</p> <p>If <code>$n</code> is negative, it counts from the end of <code>$list</code>. Throws an error if there is no existing element at index&nbsp;<code>$n</code>.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-8-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-8-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-8-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">set-nth</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span><span class="o">,</span> <span class="m">1</span><span class="o">,</span> <span class="m">2em</span><span class="p">);</span> <span class="c1">// 2em 20px 30px&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">set-nth</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span><span class="o">,</span> <span class="m">-1</span><span class="o">,</span> <span class="m">8em</span><span class="p">);</span> <span class="c1">// 10px, 20px, 8em&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">set-nth</span><span class="p">((</span><span class="n">Helvetica</span><span class="o">,</span> <span class="n">Arial</span><span class="o">,</span> <span class="nb">sans-serif</span><span class="p">)</span><span class="o">,</span> <span class="m">3</span><span class="o">,</span> <span class="n">Roboto</span><span class="p">);</span> <span class="c1">// Helvetica, Arial, Roboto&#x000A;</span></code></pre></div><div id=example-8-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">set-nth</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span><span class="o">,</span> <span class="m">1</span><span class="o">,</span> <span class="m">2em</span><span class="p">)</span><span class="err">;</span> <span class="o">//</span> <span class="m">2em</span> <span class="m">20px</span> <span class="m">30px</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">set-nth</span><span class="p">(</span><span class="m">10px</span> <span class="m">20px</span> <span class="m">30px</span><span class="o">,</span> <span class="m">-1</span><span class="o">,</span> <span class="m">8em</span><span class="p">)</span><span class="err">;</span> <span class="o">//</span> <span class="m">10px</span><span class="o">,</span> <span class="m">20px</span><span class="o">,</span> <span class="m">8em</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">set-nth</span><span class="p">((</span><span class="n">Helvetica</span><span class="o">,</span> <span class="n">Arial</span><span class="o">,</span> <span class="nb">sans-serif</span><span class="p">)</span><span class="o">,</span> <span class="m">3</span><span class="o">,</span> <span class="n">Roboto</span><span class="p">)</span><span class="err">;</span> <span class="o">//</span> <span class="n">Helvetica</span><span class="o">,</span> <span class="n">Arial</span><span class="o">,</span> <span class="n">Roboto</span>&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--function" id=zip><pre class="signature highlight scss"><a class="anchor" href="#zip"></a><code><span class="nf">list</span><span class="o">.</span><span class="nf .docSearch-function" name="list.zip">zip</span><span class="p">(</span><span class="nv">$lists</span><span class="o">...</span><span class="p">)</span>&#x0000A<span class="nf">zip</span><span class="p">(</span><span class="nv">$lists</span><span class="o">...</span><span class="p">)</span> <span class="c1">//=> <a href="/documentation/values/lists">list</a></span></code> </pre> <p>Combines every list in <code>$lists</code> into a single list of&nbsp;sub-lists.</p> <p>Each element in the returned list contains all the elements at that position in <code>$lists</code>. The returned list is as long as the shortest list in&nbsp;<code>$lists</code>.</p> <p>The returned list is always comma-separated and the sub-lists are always&nbsp;space-separated.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-9-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-9-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-9-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">zip</span><span class="p">(</span><span class="m">10px</span> <span class="m">50px</span> <span class="m">100px</span><span class="o">,</span> <span class="n">short</span> <span class="n">mid</span> <span class="n">long</span><span class="p">);</span> <span class="c1">// 10px short, 50px mid, 100px long&#x000A;</span><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">zip</span><span class="p">(</span><span class="m">10px</span> <span class="m">50px</span> <span class="m">100px</span><span class="o">,</span> <span class="n">short</span> <span class="n">mid</span><span class="p">);</span> <span class="c1">// 10px short, 50px mid&#x000A;</span></code></pre></div><div id=example-9-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">zip</span><span class="p">(</span><span class="m">10px</span> <span class="m">50px</span> <span class="m">100px</span><span class="o">,</span> <span class="n">short</span> <span class="n">mid</span> <span class="n">long</span><span class="p">)</span>  <span class="o">//</span> <span class="m">10px</span> <span class="n">short</span><span class="o">,</span> <span class="m">50px</span> <span class="n">mid</span><span class="o">,</span> <span class="m">100px</span> <span class="n">long</span>&#x000A;<span class="k">@debug</span> <span class="n">list</span><span class="o">.</span><span class="nf">zip</span><span class="p">(</span><span class="m">10px</span> <span class="m">50px</span> <span class="m">100px</span><span class="o">,</span> <span class="n">short</span> <span class="n">mid</span><span class="p">)</span>  <span class="o">//</span> <span class="m">10px</span> <span class="n">short</span><span class="o">,</span> <span class="m">50px</span> <span class="n">mid</span>&#x000A;</code></pre></div></div> </div> </div> </div> </div> </div> </div> </div> </div> </div> <div class=sl-c-alert> <div aria-labelledby=release-nav class='sl-l-container sl-c-list-horizontal-wrapper'> <ul class=sl-l-grid--justify-center> <li id=release-nav> Current Releases: </li> <li> <span class=release-name><a href="/dart-sass">Dart Sass</a>&#32;<a href="https://github.com/sass/dart-sass/releases/tag/1.24.4">1.24.4</a></span> </li> <li> <span class=release-name><a href="/libsass">LibSass</a>&#32;<a href="https://github.com/sass/libsass/releases/tag/3.6.3">3.6.3</a></span> </li> <li> <span class=release-name><a href="/ruby-sass">Ruby Sass</a><span aria-label=coffin role=presentation> &#32; ⚰ </span></span> </li> <li class='sl-l-grid__column sl-l-large-grid__column--auto-size'> <a href="/implementation">Implementation Guide</a> </li> </ul> </div> </div> </main> <footer class='site-footer contentinfo' itemscope=itemscope itemtype='http://schema.org/WPFooter' role=contentinfo> <div class='sl-l-container sl-l-section'> <div class='sl-l-grid sl-l-grid--full sl-l-large-grid--fit sl-l-large-grid--center sl-l-large-grid--gutters'> <div class=sl-l-grid__column> <p>Sass &copy; 2006&ndash;2020 <a href="https://github.com/hcatlin">Hampton Catlin</a>, <a href="https://twitter.com/nex3">Natalie Weizenbaum</a>, <a href="http://chriseppstein.github.io/">Chris Eppstein</a>, <a href="https://www.sushiandrobots.com">Jina Anne</a>, and numerous contributors. It is available for use and modification under the <a href="https://github.com/sass/dart-sass/blob/master/LICENSE">MIT&nbsp;License</a>.</p> <nav class=sl-c-list-horizontal-wrapper> <ul> <li><a href="https://github.com/sass">Sass on GitHub</a></li> <li><a href="https://github.com/sass/sass-site">Website Source Code</a></li> <li><a href="/styleguide">Style Guide</a></li> <li><a href="/community-guidelines">Community Guidelines</a></li> </ul> </nav> </div> <div class='sl-l-grid__column sl-l-large-grid__column--auto-size sl-l-large-grid--justify-right'> <a class=twitter-follow-button data-show-count=false data-size=large href='https://twitter.com/SassCSS'> Follow @SassCSS </a> <script>
  !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
</script> </div> </div> </div> </footer> <script src="https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js"></script> <script>
  docsearch({
    apiKey: 'a409ff5d6a2476083c1a8dd1f8c04ec5',
    indexName: 'sass-lang',
    inputSelector: 'input.search',
    transformData: function(hits) {
      var domain = window.location.origin + "/";
      hits.forEach(function(hit) {
        if (!hit.url.startsWith(domain)) {
          hit.url = hit.url.replace(/^https?:\/\/[^\/]+\//, domain);
        }
      });
      return hits;
    },
    debug: false
  });
</script> <script src="/assets/js/sass-184dcd58.js"></script> </body> </html>