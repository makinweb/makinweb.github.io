<!DOCTYPE html> <html class=no-js lang=en> <head> <meta charset=utf-8> <meta content='IE=edge' http-equiv=X-UA-Compatible> <title>Sass: @extend</title> <meta content='Syntatically Awesome Style Sheets' name=description> <meta content='width=device-width, initial-scale=1' name=viewport> <link href='/feed.xml' rel=alternate type='application/atom+xml'> <link href="https://fonts.googleapis.com/css?family=Source+Code+Pro|Source+Sans+Pro:300,400,600|Source+Serif+Pro" rel=stylesheet /> <link href="https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css" rel=stylesheet /> <link href="/assets/css/sass-6cc9628c.css" rel=stylesheet /> <noscript><link href="/assets/css/noscript-c6723936.css" rel=stylesheet /></noscript> <script>
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-535380-8']);
  _gaq.push(['_trackPageview']);
  
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script> <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  
  ga('create', 'UA-535380-14', 'sass-lang.com');
  ga('send', 'pageview');
</script> </head> <body class='documentation documentation_at-rules documentation_at-rules_extend'> <!--[if lt IE 9]><p class=browserupgrade> You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience and security. </p><![endif]--> <header class=sl-r-banner itemscope=itemscope itemtype='http://schema.org/WPHeader' role=banner> <div class='sl-c-alert sl-c-alert--info'> <div class=sl-l-container> <p> Sass just launched a brand new module system. <a href="/blog/the-module-system-is-launched">Learn all about the module system on the Sass blog </a>! </p> </div> </div> <div class=sl-c-pop-stripe></div> <div class=sl-l-container> <div class='sl-l-grid sl-l-grid--full sl-l-large-grid--fit sl-l-large-grid--center sl-l-large-grid--gutters'> <p class='sl-l-grid__column sl-r-banner__brand'> <a href="/"><img alt=Sass height=48 src="/assets/img/logos/logo-b6e1ef6e.svg"/> </a></p> <nav aria-label='Site navigation' class='sl-r-banner__navigation sl-l-grid__column sl-l-large-grid sl-l-large-grid__column--auto-size sl-c-list-horizontal-wrapper' itemscope=itemscope itemtype='http://schema.org/SiteNavigationElement' role=navigation> <ul> <li><a href="/install">Install</a></li> <li><a href="/guide">Learn Sass</a></li> <li><a href="/blog">Blog</a></li> <li><a href="/documentation">Documentation</a></li> <li><a href="/community">Get Involved</a></li> <li><label class=visuallyhidden for=s>Search</label><input placeholder=Search class=search id=s name=s></li> </ul> </nav> </div> </div> </header> <main class=content id=main-content itemprop=mainContentOfPage role=main> <h1 class=sl-l-container> @extend </h1> <div class='sl-background--white sl-l-container sl-l-section'><div class=sl-l-medium-holy-grail> <div class=sl-l-medium-holy-grail__body> <nav aria-label='Content navigation' class=sl-l-medium-holy-grail__navigation role=navigation> <div class='sl-c-list-navigation-wrapper sl-c-list-navigation-wrapper--collapsible'> <h2>Contents</h2> <ul><li><a href="/documentation/syntax" class=section>Syntax</a> <ul><li class=overview><a href="/documentation/syntax">Overview</a></li> <li><a href="/documentation/syntax/parsing" class="">Parsing a Stylesheet</a> </li> <li><a href="/documentation/syntax/structure" class="">Structure of a Stylesheet</a> </li> <li><a href="/documentation/syntax/comments" class="">Comments</a> </li> <li><a href="/documentation/syntax/special-functions" class="">Special Functions</a> </li> </ul> </li> <li><a href="/documentation/style-rules" class=section>Style Rules</a> <ul><li class=overview><a href="/documentation/style-rules">Overview</a></li> <li><a href="/documentation/style-rules/declarations" class="">Property Declarations</a> </li> <li><a href="/documentation/style-rules/parent-selector" class="">Parent Selector</a> </li> <li><a href="/documentation/style-rules/placeholder-selectors" class="">Placeholder Selectors</a> </li> </ul> </li> <li><a href="/documentation/variables" class="">Variables</a> </li> <li><a href="/documentation/interpolation" class="">Interpolation</a> </li> <li><a href="/documentation/at-rules" class="section open selected">At-Rules</a> <ul><li class=overview><a href="/documentation/at-rules">Overview</a></li> <li><a href="/documentation/at-rules/use" class=""><code>@use</code></a> </li> <li><a href="/documentation/at-rules/forward" class=""><code>@forward</code></a> </li> <li><a href="/documentation/at-rules/import" class=""><code>@import</code></a> </li> <li><a href="/documentation/at-rules/mixin" class=""><code>@mixin</code> and <code>@include</code></a> </li> <li><a href="/documentation/at-rules/function" class=""><code>@function</code></a> </li> <li><a href="/documentation/at-rules/extend" class="open selected"><code>@extend</code></a> </li> <li><a href="/documentation/at-rules/error" class=""><code>@error</code></a> </li> <li><a href="/documentation/at-rules/warn" class=""><code>@warn</code></a> </li> <li><a href="/documentation/at-rules/debug" class=""><code>@debug</code></a> </li> <li><a href="/documentation/at-rules/at-root" class=""><code>@at-root</code></a> </li> <li><a href="/documentation/at-rules/control" class=section>Flow Control</a> <ul><li class=overview><a href="/documentation/at-rules/control">Overview</a></li> <li><a href="/documentation/at-rules/control/if" class=""><code>@if</code> and <code>@else</code></a> </li> <li><a href="/documentation/at-rules/control/each" class=""><code>@each</code></a> </li> <li><a href="/documentation/at-rules/control/for" class=""><code>@for</code></a> </li> <li><a href="/documentation/at-rules/control/while" class=""><code>@while</code></a> </li> </ul> </li> <li><a href="/documentation/at-rules/css" class="">From CSS</a> </li> </ul> </li> <li><a href="/documentation/values" class=section>Values</a> <ul><li class=overview><a href="/documentation/values">Overview</a></li> <li><a href="/documentation/values/numbers" class="">Numbers</a> </li> <li><a href="/documentation/values/strings" class="">Strings</a> </li> <li><a href="/documentation/values/colors" class="">Colors</a> </li> <li><a href="/documentation/values/lists" class="">Lists</a> </li> <li><a href="/documentation/values/maps" class="">Maps</a> </li> <li><a href="/documentation/values/booleans" class=""><code>true</code> and <code>false</code></a> </li> <li><a href="/documentation/values/null" class=""><code>null</code></a> </li> <li><a href="/documentation/values/functions" class="">Functions</a> </li> </ul> </li> <li><a href="/documentation/operators" class=section>Operators</a> <ul><li class=overview><a href="/documentation/operators">Overview</a></li> <li><a href="/documentation/operators/equality" class="">Equality</a> </li> <li><a href="/documentation/operators/relational" class="">Relational</a> </li> <li><a href="/documentation/operators/numeric" class="">Numeric</a> </li> <li><a href="/documentation/operators/string" class="">String</a> </li> <li><a href="/documentation/operators/boolean" class="">Boolean</a> </li> </ul> </li> <li><a href="/documentation/modules" class=section>Built-In Modules</a> <ul><li class=overview><a href="/documentation/modules">Overview</a></li> <li><a href="/documentation/modules/color" class=""><code>sass:color</code></a> </li> <li><a href="/documentation/modules/list" class=""><code>sass:list</code></a> </li> <li><a href="/documentation/modules/map" class=""><code>sass:map</code></a> </li> <li><a href="/documentation/modules/math" class=""><code>sass:math</code></a> </li> <li><a href="/documentation/modules/meta" class=""><code>sass:meta</code></a> </li> <li><a href="/documentation/modules/selector" class=""><code>sass:selector</code></a> </li> <li><a href="/documentation/modules/string" class=""><code>sass:string</code></a> </li> </ul> </li> <li><a href="/documentation/breaking-changes" class=section>Breaking Changes</a> <ul><li class=overview><a href="/documentation/breaking-changes">Overview</a></li> <li><a href="/documentation/breaking-changes/extend-compound" class="">Extending Compound Selectors</a> </li> <li><a href="/documentation/breaking-changes/css-vars" class="">CSS Variable Syntax</a> </li> </ul> </li> <li><a href="/documentation/cli" class=section>Command Line</a> <ul><li class=overview><a href="/documentation/cli">Overview</a></li> <li><a href="/documentation/cli/dart-sass" class="">Dart Sass</a> </li> <li><a href="/documentation/cli/ruby-sass" class="">Ruby Sass</a> </li> <li><a href="/documentation/cli/migrator" class="">Migrator</a> </li> </ul> </li> <li><a href="/documentation/js-api" class="">JavaScript API</a> </li> </ul> </div> </nav> <div class=sl-l-medium-holy-grail__main> <div class=sl-l-large-holy-grail> <div class=sl-l-large-holy-grail__body> <div class='sl-l-large-holy-grail__complementary sl-l-large-holy-grail__complementary--contents'> <nav aria-labelledby=page-sections class='page-sections sl-c-list-navigation-wrapper sl-c-list-navigation-wrapper--collapsible'> <h3 id=page-sections>Page Sections</h3> <ul> <li> <a href="#how-it-works">How It Works</a> </li> <li> <a href="#placeholder-selectors" class=section>Placeholder Selectors</a> <ul> <li class=overview><a href="#placeholder-selectors">Overview</a></li> <li> <a href="#private-placeholders">Private Placeholders</a> </li> </ul> </li> <li> <a href="#extension-scope">Extension Scope</a> </li> <li> <a href="#mandatory-and-optional-extends">Mandatory and Optional Extends</a> </li> <li> <a href="#extends-or-mixins">Extends or Mixins?</a> </li> <li> <a href="#limitations" class=section>Limitations</a> <ul> <li class=overview><a href="#limitations">Overview</a></li> <li> <a href="#disallowed-selectors">Disallowed Selectors</a> </li> <li> <a href="#html-heuristics">HTML Heuristics</a> </li> <li> <a href="#extend-in-media">Extend in <code>@media</code></a> </li> </ul> </li> </ul> </nav> </div> <div class='sl-l-large-holy-grail__main docSearch-content'> <div class='sl-l-container sl-l-container--small'> <div class=sl-c-introduction> <p>There are often cases when designing a page when one class should have all the styles of another class, as well as its own specific styles. For example, the <a href="http://getbem.com/naming/">BEM methodology</a> encourages modifier classes that go on the same elements as block or element classes. But this can create cluttered HTML, it&#39;s prone to errors from forgetting to include both classes, and it can bring non-semantic style concerns into your markup.</p> </div> <pre class="highlight html"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"error error--serious"</span><span class="nt">&gt;</span>
  Oh no! You've been hacked!
<span class="nt">&lt;/div&gt;</span>
</code></pre>&nbsp;<pre class="highlight css"><code><span class="nc">.error</span> <span class="p">{</span>
  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="m">#f00</span><span class="p">;</span>
  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#fdd</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.error--serious</span> <span class="p">{</span>
  <span class="nl">border-width</span><span class="p">:</span> <span class="m">3px</span><span class="p">;</span>
<span class="p">}</span>
</code></pre> <p>Sass&rsquo;s <code>@extend</code> rule solves this. It&rsquo;s written <code>@extend &lt;selector&gt;</code>, and&nbsp;it tells Sass that one selector should inherit the styles of&nbsp;another.</p> <div class="code-example ui-tabs can-split" style="--split-location: 50.0%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-1-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-1-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-1-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-1-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nc">.error</span> <span class="p">{</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="mh">#f00</span><span class="p">;</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="mh">#fdd</span><span class="p">;</span>&#x000A;&#x000A;  <span class="k">&amp;</span><span class="nt">--serious</span> <span class="p">{</span>&#x000A;    <span class="k">@extend</span> <span class="nc">.error</span><span class="p">;</span>&#x000A;    <span class="nl">border-width</span><span class="p">:</span> <span class="m">3px</span><span class="p">;</span>&#x000A;  <span class="p">}</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-1-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nc">.error</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="mh">#f00</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="mh">#fdd</span>&#x000A;&#x000A;  <span class="k">&amp;</span><span class="nt">--serious</span>&#x000A;    <span class="k">@extend</span> <span class="nc">.error</span>&#x000A;    <span class="nl">border-width</span><span class="p">:</span> <span class="m">3px</span>&#x000A;&#x000A;&#x000A;</code></pre></div><div id=example-1-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nc">.error</span><span class="o">,</span> <span class="nc">.error--serious</span> <span class="p">{</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="m">#f00</span><span class="p">;</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#fdd</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;<span class="nc">.error--serious</span> <span class="p">{</span>&#x000A;  <span class="nl">border-width</span><span class="p">:</span> <span class="m">3px</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;</code></pre></div></div> <p>When one class extends another, Sass styles all elements that match the&nbsp;extender as though they also match the class being extended. When one class&nbsp;selector extends another, it works exactly as though you added the extended class&nbsp;to every element in your <span class=caps>HTML</span> that already had the extending class. You can&nbsp;just write <code>class=&quot;error--serious&quot;</code>, and Sass will make sure it&rsquo;s styled as though&nbsp;it had <code>class=&quot;error&quot;</code> as&nbsp;well.</p> <p>Of course, selectors aren&rsquo;t just used on their own in style rules. Sass knows&nbsp;to extend <em>everywhere</em> the selector is used. This ensures that your elements&nbsp;are styled exactly as if they matched the extended&nbsp;selector.</p> <div class="code-example ui-tabs can-split" style="--split-location: 50.0%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-2-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-2-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-2-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-2-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nc">.error</span><span class="nd">:hover</span> <span class="p">{</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="mh">#fee</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.error--serious</span> <span class="p">{</span>&#x000A;  <span class="k">@extend</span> <span class="nc">.error</span><span class="p">;</span>&#x000A;  <span class="nl">border-width</span><span class="p">:</span> <span class="m">3px</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-2-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nc">.error</span><span class="nd">:hover</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="mh">#fee</span>&#x000A;&#x000A;&#x000A;<span class="nc">.error--serious</span>&#x000A;  <span class="k">@extend</span> <span class="nc">.error</span>&#x000A;  <span class="nl">border-width</span><span class="p">:</span> <span class="m">3px</span>&#x000A;&#x000A;</code></pre></div><div id=example-2-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nc">.error</span><span class="nd">:hover</span><span class="o">,</span> <span class="nc">.error--serious</span><span class="nd">:hover</span> <span class="p">{</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#fee</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.error--serious</span> <span class="p">{</span>&#x000A;  <span class="nl">border-width</span><span class="p">:</span> <span class="m">3px</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;</code></pre></div></div> <div class="sl-c-callout sl-c-callout--warning"><h3>⚠️ Heads&nbsp;up!</h3> <p>Extends are resolved after the rest of your stylesheet is compiled. In particular, it happens after <a href="../style-rules/parent-selector">parent selectors</a> are resolved. This means that if you <code>@extend .error</code>, it won&rsquo;t affect the inner selector in <code>.error { &amp;__icon { ... } }</code>. It also means that <a href="../style-rules/parent-selector#in-sassscript">parent selectors in SassScript</a> can&rsquo;t see the results of&nbsp;extend.</p> </div> <h2 id=how-it-works> <a class=anchor href="#how-it-works"><span class=visuallyhidden>How It Works permalink</span></a>How It&nbsp;Works</h2> <p>Unlike <a href=mixin>mixins</a>, which copy styles into the current style rule,&nbsp;<code>@extend</code> updates style rules that contain the extended selector so that they contain&nbsp;the extending selector as well. When extending selectors, Sass does <em>intelligent unification</em>:</p> <ul> <li><p>It never generates selectors like <code>#main#footer</code> that can&rsquo;t possibly&nbsp;match any&nbsp;elements.</p></li> <li><p>It ensures that complex selectors are interleaved so that they work no&nbsp;matter which order the <span class=caps>HTML</span> elements are&nbsp;nested.</p></li> <li><p>It trims redundant selectors as much as possible, while still ensuring&nbsp;that the specificity is greater than or equal to that of the&nbsp;extender.</p></li> <li><p>It knows when one selector matches everything another does, and can&nbsp;combine them&nbsp;together.</p></li> <li><p>It intelligently handles <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors#Combinators">combinators</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Universal_selectors">universal selectors</a>,&nbsp;and <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:not">pseudo-classes that contain selectors</a>.</p></li> </ul> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-3-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-3-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-3-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-3-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nc">.content</span> <span class="nt">nav</span><span class="nc">.sidebar</span> <span class="p">{</span>&#x000A;  <span class="k">@extend</span> <span class="nc">.info</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="c1">// This won't be extended, because `p` is incompatible with `nav`.&#x000A;</span><span class="nt">p</span><span class="nc">.info</span> <span class="p">{</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="mh">#dee9fc</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="c1">// There's no way to know whether `&lt;div class="guide"&gt;` will be inside or&#x000A;// outside `&lt;div class="content"&gt;`, so Sass generates both to be safe.&#x000A;</span><span class="nc">.guide</span> <span class="nc">.info</span> <span class="p">{</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="nf">rgba</span><span class="p">(</span><span class="mh">#000</span><span class="o">,</span> <span class="m">0</span><span class="mi">.8</span><span class="p">);</span>&#x000A;  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">2px</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="c1">// Sass knows that every element matching "main.content" also matches ".content"&#x000A;// and avoids generating unnecessary interleaved selectors.&#x000A;</span><span class="nt">main</span><span class="nc">.content</span> <span class="nc">.info</span> <span class="p">{</span>&#x000A;  <span class="nl">font-size</span><span class="p">:</span> <span class="m">0</span><span class="mi">.8em</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-3-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nc">.content</span> <span class="nt">nav</span><span class="nc">.sidebar</span>&#x000A;  <span class="k">@extend</span> <span class="nc">.info</span>&#x000A;&#x000A;&#x000A;<span class="c1">// This won't be extended, because `p` is incompatible with `nav`.&#x000A;</span><span class="nt">p</span><span class="nc">.info</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="mh">#dee9fc</span>&#x000A;&#x000A;&#x000A;<span class="c1">// There's no way to know whether `&lt;div class="guide"&gt;` will be inside or&#x000A;// outside `&lt;div class="content"&gt;`, so Sass generates both to be safe.&#x000A;</span><span class="nc">.guide</span> <span class="nc">.info</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="nf">rgba</span><span class="p">(</span><span class="mh">#000</span><span class="o">,</span> <span class="m">0</span><span class="mi">.8</span><span class="p">)</span>&#x000A;  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">2px</span>&#x000A;&#x000A;&#x000A;<span class="c1">// Sass knows that every element matching "main.content" also matches ".content"&#x000A;// and avoids generating unnecessary interleaved selectors.&#x000A;</span><span class="nt">main</span><span class="nc">.content</span> <span class="nc">.info</span>&#x000A;  <span class="nl">font-size</span><span class="p">:</span> <span class="m">0</span><span class="mi">.8em</span>&#x000A;&#x000A;</code></pre></div><div id=example-3-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nt">p</span><span class="nc">.info</span> <span class="p">{</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#dee9fc</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.guide</span> <span class="nc">.info</span><span class="o">,</span> <span class="nc">.guide</span> <span class="nc">.content</span> <span class="nt">nav</span><span class="nc">.sidebar</span><span class="o">,</span> <span class="nc">.content</span> <span class="nc">.guide</span> <span class="nt">nav</span><span class="nc">.sidebar</span> <span class="p">{</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="n">rgba</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0.8</span><span class="p">);</span>&#x000A;  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">2px</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nt">main</span><span class="nc">.content</span> <span class="nc">.info</span><span class="o">,</span> <span class="nt">main</span><span class="nc">.content</span> <span class="nt">nav</span><span class="nc">.sidebar</span> <span class="p">{</span>&#x000A;  <span class="nl">font-size</span><span class="p">:</span> <span class="m">0.8em</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> <div class="sl-c-callout sl-c-callout--fun-fact"><h3>💡 Fun&nbsp;fact:</h3> <p>You can directly access Sass&rsquo;s intelligent unification using <a href="../modules/selector">selector functions</a>! The <a href="../modules/selector#unify"><code>selector.unify()</code> function</a> returns a selector that matches the intersection of two selectors, while the <a href="../modules/selector#extend"><code>selector.extend()</code> function</a> works just like <code>@extend</code>, but on a single&nbsp;selector.</p> </div> <div class="sl-c-callout sl-c-callout--warning"><h3>⚠️ Heads&nbsp;up!</h3> <p>Because <code>@extend</code> updates style rules that contain the extended selector, their styles have precedence in <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Cascade">the cascade</a> based on where the extended selector&rsquo;s style rules appear, <em>not</em> based on where the <code>@extend</code> appears. This can be confusing, but just remember: this is the same precedence those rules would have if you added the extended class to your&nbsp;<span class=caps>HTML</span>!</p> </div> <h2 id=placeholder-selectors> <a class=anchor href="#placeholder-selectors"><span class=visuallyhidden>Placeholder Selectors permalink</span></a>Placeholder&nbsp;Selectors</h2> <p>Sometimes you want to write a style rule that&rsquo;s <em>only</em> intended to be&nbsp;extended. In that case, you can use <a href="../style-rules/placeholder-selectors">placeholder selectors</a>, which look like&nbsp;class selectors that start with <code>%</code> instead of <code>.</code>. Any selectors that&nbsp;include placeholders aren&rsquo;t included in the <span class=caps>CSS</span> output, but selectors that extend&nbsp;them are.</p> <div class="code-example ui-tabs can-split" style="--split-location: 50.0%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-4-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-4-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-4-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-4-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nc">.alert</span><span class="nd">:hover</span><span class="o">,</span> <span class="nv">%strong-alert</span> <span class="p">{</span>&#x000A;  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nv">%strong-alert</span><span class="nd">:hover</span> <span class="p">{</span>&#x000A;  <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-4-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nc">.alert</span><span class="nd">:hover</span><span class="o">,</span> <span class="nv">%strong-alert</span>&#x000A;  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span>&#x000A;&#x000A;&#x000A;<span class="nv">%strong-alert</span><span class="nd">:hover</span> &#x000A;  <span class="nl">color</span><span class="p">:</span> <span class="no">red</span>&#x000A;&#x000A;</code></pre></div><div id=example-4-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nc">.alert</span><span class="nd">:hover</span> <span class="p">{</span>&#x000A;  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> <h3 id=private-placeholders> <a class=anchor href="#private-placeholders"><span class=visuallyhidden>Private Placeholders permalink</span></a>Private&nbsp;Placeholders</h3> <p>Like <a href="use#private-members">module members</a>, a placeholder selector can be marked private&nbsp;by starting its name with either <code>-</code> or <code>_</code>. A private placeholder selector&nbsp;can only be extended within the stylesheet that defines it. To any&nbsp;other stylesheets, it will look as though that selector doesn&rsquo;t&nbsp;exist.</p> <h2 id=extension-scope> <a class=anchor href="#extension-scope"><span class=visuallyhidden>Extension Scope permalink</span></a>Extension&nbsp;Scope</h2> <p>When one stylesheet extends a selector, that extension will only affect&nbsp;style rules written in <em>upstream</em> modules—that is, modules that are loaded by&nbsp;that stylesheet using the <a href=use><code>@use</code> rule</a> or the <a href=forward><code>@forward</code> rule</a>, modules&nbsp;loaded by <em>those</em> modules, and so on. This helps make your <code>@extend</code> rules&nbsp;more predictable, ensuring that they affect only the styles you were aware of&nbsp;when you wrote&nbsp;them.</p> <div class="sl-c-callout sl-c-callout--warning"><h3>⚠️ Heads&nbsp;up!</h3> <p>Extensions aren&rsquo;t scoped at all if you&rsquo;re using the <a href=import><code>@import</code> rule</a>. Not only will they affect every stylesheet you import, they&rsquo;ll affect every stylesheet that imports your stylesheet, everything else those stylesheets import, and so on. Without <code>@use</code>, extensions are <em>global</em>.</p> </div> <h2 id=mandatory-and-optional-extends> <a class=anchor href="#mandatory-and-optional-extends"><span class=visuallyhidden>Mandatory and Optional Extends permalink</span></a>Mandatory and Optional&nbsp;Extends</h2> <p>Normally, if an <code>@extend</code> doesn&rsquo;t match any selectors in the stylesheet,&nbsp;Sass will produce an error. This helps protect from typos or from renaming a&nbsp;selector without renaming the selectors that inherit from it. Extends that require&nbsp;that the extended selector exists are <em>mandatory</em>.</p> <p>This may not always be what you want, though. If you want the <code>@extend</code> to&nbsp;do nothing if the extended selector doesn&rsquo;t exist, just add <code>!optional</code> to the&nbsp;end.</p> <h2 id=extends-or-mixins> <a class=anchor href="#extends-or-mixins"><span class=visuallyhidden>Extends or Mixins? permalink</span></a>Extends or&nbsp;Mixins?</h2> <p>Extends and <a href=mixin>mixins</a> are both ways of encapsulating and re-using styles&nbsp;in Sass, which naturally raises the question of when to use which one. Mixins&nbsp;are obviously necessary when you need to configure the styles using <a href="mixin#arguments">arguments</a>, but what if they&rsquo;re just a chunk of&nbsp;styles?</p> <p>As a rule of thumb, extends are the best option when you&rsquo;re expressing&nbsp;a relationship between semantic classes (or other semantic selectors). Because&nbsp;an element with class <code>.error--serious</code> <em>is an</em> error, it makes sense for it&nbsp;to extend <code>.error</code>. But for non-semantic collections of styles, writing a mixin&nbsp;can avoid cascade headaches and make it easier to configure down the&nbsp;line.</p> <div class="sl-c-callout sl-c-callout--fun-fact"><h3>💡 Fun&nbsp;fact:</h3> <p>Most web servers compress the <span class=caps>CSS</span> they serve using an algorithm that&rsquo;s very good at handling repeated chunks of identical text. This means that, although mixins may produce more <span class=caps>CSS</span> than extends, they probably won&rsquo;t substantially increase the amount your users need to download. So choose the feature that makes the most sense for your use-case, not the one that generates the least&nbsp;<span class=caps>CSS</span>!</p> </div> <h2 id=limitations> <a class=anchor href="#limitations"><span class=visuallyhidden>Limitations permalink</span></a>Limitations</h2> <h3 id=disallowed-selectors> <a class=anchor href="#disallowed-selectors"><span class=visuallyhidden>Disallowed Selectors permalink</span></a>Disallowed&nbsp;Selectors</h3> <dl class="impl-status sl-c-description-list sl-c-description-list--horizontal"><div class=compatibility>Compatibility (No Compound Extensions):</div> <div><dt>Dart&nbsp;Sass</dt> <dd>✓</dd> </div> <div><dt>LibSass</dt> <dd>✗</dd> </div> <div><dt>Ruby&nbsp;Sass</dt> <dd>✗</dd> </div> <div><a>▶</a></div> </dl> <div class="sl-c-callout sl-c-callout--impl-status"><p>LibSass and Ruby Sass currently allow compound selectors like <code>.message.info</code> to be extended. However, this behavior doesn&rsquo;t match the definition of <code>@extend</code>: instead of styling elements that match the extending selector as though it had <code>class=&quot;message info&quot;</code>, which would be affected by style rules that included either <code>.message</code> <em>or</em> <code>.info</code>, it only styled them with rules that included both <code>.message</code> <em>and</em>&nbsp;<code>info</code>.</p> <p>In order to keep the definition of <code>@extend</code> straightforward and understandable, and to keep the implementation clean and efficient, that behavior is now deprecated and will be removed from future&nbsp;versions.</p> <p>See <a href="../breaking-changes/extend-compound">the breaking change page</a> for more&nbsp;details.</p></div> <p>Only <em>simple selectors</em>—individual selectors like <code>.info</code> or <code>a</code>—can&nbsp;be extended. If <code>.message.info</code> could be extended, the definition of <code>@extend</code>&nbsp;says that elements matching the extender would be styled as though they&nbsp;matched <code>.message.info</code>. That&rsquo;s just the same as matching both <code>.message</code> and&nbsp;<code>.info</code>, so there wouldn&rsquo;t be any benefit in writing that instead&nbsp;of <code>@extend .message, .info</code>.</p> <p>Similarly, if <code>.main .info</code> could be extended, it would do (almost) the&nbsp;same thing as extending <code>.info</code> on its own. The subtle differences aren&rsquo;t worth&nbsp;the confusion of looking like it&rsquo;s doing something substantially different, so&nbsp;this isn&rsquo;t allowed&nbsp;either.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-5-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-5-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-5-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nc">.alert</span> <span class="p">{</span>&#x000A;  <span class="k">@extend</span> <span class="nc">.message.info</span><span class="p">;</span>&#x000A;  <span class="c1">//      ^^^^^^^^^^^^^&#x000A;</span>  <span class="c1">// Error: Write @extend .message, .info instead.&#x000A;</span>&#x000A;  <span class="k">@extend</span> <span class="nc">.main</span> <span class="nc">.info</span><span class="p">;</span>&#x000A;  <span class="c1">//      ^^^^^^^^^^^&#x000A;</span>  <span class="c1">// Error: write @extend .info instead.&#x000A;</span><span class="p">}</span>&#x000A;</code></pre></div><div id=example-5-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nc">.alert</span>&#x000A;  <span class="k">@extend</span> <span class="nc">.message.info</span>&#x000A;  <span class="c1">//      ^^^^^^^^^^^^^&#x000A;</span>  <span class="c1">// Error: Write @extend .message, .info instead.&#x000A;</span>&#x000A;  <span class="k">@extend</span> <span class="nc">.main</span> <span class="nc">.info</span>&#x000A;  <span class="c1">//      ^^^^^^^^^^^&#x000A;</span>  <span class="c1">// Error: write @extend .info instead.&#x000A;</span>&#x000A;</code></pre></div></div> <h3 id=html-heuristics> <a class=anchor href="#html-heuristics"><span class=visuallyhidden><span class=caps>HTML</span> Heuristics permalink</span></a><span class=caps>HTML</span>&nbsp;Heuristics</h3> <p>When <code>@extend</code> <a href="#how-it-works">interleaves complex selectors</a>, it doesn&rsquo;t generate&nbsp;all possible combinations of ancestor selectors. Many of the selectors it&nbsp;could generate are unlikely to actually match real <span class=caps>HTML</span>, and generating them all&nbsp;would make stylesheets way too big for very little real value. Instead, it&nbsp;uses a <a href="https://en.wikipedia.org/wiki/Heuristic">heuristic</a>: it assumes that each selector&rsquo;s ancestors will&nbsp;be self-contained, without being interleaved with any other selector&rsquo;s&nbsp;ancestors.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-6-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-6-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-6-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-6-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nt">header</span> <span class="nc">.warning</span> <span class="nt">li</span> <span class="p">{</span>&#x000A;  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nt">aside</span> <span class="nc">.notice</span> <span class="nt">dd</span> <span class="p">{</span>&#x000A;  <span class="c1">// Sass doesn't generate CSS to match the &lt;dd&gt; in&#x000A;</span>  <span class="c1">//&#x000A;</span>  <span class="c1">// &lt;header&gt;&#x000A;</span>  <span class="c1">//   &lt;aside&gt;&#x000A;</span>  <span class="c1">//     &lt;div class="warning"&gt;&#x000A;</span>  <span class="c1">//       &lt;div class="notice"&gt;&#x000A;</span>  <span class="c1">//         &lt;dd&gt;...&lt;/dd&gt;&#x000A;</span>  <span class="c1">//       &lt;/div&gt;&#x000A;</span>  <span class="c1">//     &lt;/div&gt;&#x000A;</span>  <span class="c1">//   &lt;/aside&gt;&#x000A;</span>  <span class="c1">// &lt;/header&gt;&#x000A;</span>  <span class="c1">//&#x000A;</span>  <span class="c1">// because matching all elements like that would require us to generate nine&#x000A;</span>  <span class="c1">// new selectors instead of just two.&#x000A;</span>  <span class="k">@extend</span> <span class="nt">li</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-6-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nt">header</span> <span class="nc">.warning</span> <span class="nt">li</span>&#x000A;  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span>&#x000A;&#x000A;&#x000A;<span class="nt">aside</span> <span class="nc">.notice</span> <span class="nt">dd</span>&#x000A;  <span class="c1">// Sass doesn't generate CSS to match the &lt;dd&gt; in&#x000A;</span>  <span class="c1">//&#x000A;</span>  <span class="c1">// &lt;header&gt;&#x000A;</span>  <span class="c1">//   &lt;aside&gt;&#x000A;</span>  <span class="c1">//     &lt;div class="warning"&gt;&#x000A;</span>  <span class="c1">//       &lt;div class="notice"&gt;&#x000A;</span>  <span class="c1">//         &lt;dd&gt;...&lt;/dd&gt;&#x000A;</span>  <span class="c1">//       &lt;/div&gt;&#x000A;</span>  <span class="c1">//     &lt;/div&gt;&#x000A;</span>  <span class="c1">//   &lt;/aside&gt;&#x000A;</span>  <span class="c1">// &lt;/header&gt;&#x000A;</span>  <span class="c1">//&#x000A;</span>  <span class="c1">// because matching all elements like that would require us to generate nine&#x000A;</span>  <span class="c1">// new selectors instead of just two.&#x000A;</span>  <span class="k">@extend</span> <span class="nt">li</span>&#x000A;&#x000A;</code></pre></div><div id=example-6-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nt">header</span> <span class="nc">.warning</span> <span class="nt">li</span><span class="o">,</span> <span class="nt">header</span> <span class="nc">.warning</span> <span class="nt">aside</span> <span class="nc">.notice</span> <span class="nt">dd</span><span class="o">,</span> <span class="nt">aside</span> <span class="nc">.notice</span> <span class="nt">header</span> <span class="nc">.warning</span> <span class="nt">dd</span> <span class="p">{</span>&#x000A;  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">bold</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> <h3 id=extend-in-media> <a class=anchor href="#extend-in-media"><span class=visuallyhidden>Extend in @media permalink</span></a>Extend in&nbsp;<code>@media</code> </h3> <p>While <code>@extend</code> is allowed within <a href=css><code>@media</code> and other <span class=caps>CSS</span> at-rules</a>, it&rsquo;s&nbsp;not allowed to extend selectors that appear outside its at-rule. This is because&nbsp;the extending selector only applies within the given media context, and there&rsquo;s&nbsp;no way to make sure that restriction is preserved in the generated selector&nbsp;without duplicating the entire style&nbsp;rule.</p> <div class="code-example ui-tabs "><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-7-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-7-sass" class=ui-tabs-anchor>Sass</a></li></ul><div id=example-7-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@media</span> <span class="n">screen</span> <span class="nf">and</span> <span class="p">(</span><span class="n">max-width</span><span class="o">:</span> <span class="m">600px</span><span class="p">)</span> <span class="p">{</span>&#x000A;  <span class="nc">.error--serious</span> <span class="p">{</span>&#x000A;    <span class="k">@extend</span> <span class="nc">.error</span><span class="p">;</span>&#x000A;    <span class="c1">//      ^^^^^^&#x000A;</span>    <span class="c1">// Error: ".error" was extended in @media, but used outside it.&#x000A;</span>  <span class="p">}</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.error</span> <span class="p">{</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="mh">#f00</span><span class="p">;</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="mh">#fdd</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-7-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@media</span> <span class="n">screen</span> <span class="nf">and</span> <span class="p">(</span><span class="n">max-width</span><span class="o">:</span> <span class="m">600px</span><span class="p">)</span>&#x000A;  <span class="nc">.error--serious</span>&#x000A;    <span class="k">@extend</span> <span class="nc">.error</span>&#x000A;    <span class="c1">//      ^^^^^^&#x000A;</span>    <span class="c1">// Error: ".error" was extended in @media, but used outside it.&#x000A;</span>&#x000A;&#x000A;&#x000A;<span class="nc">.error</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="mh">#f00</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="mh">#fdd</span>&#x000A;&#x000A;</code></pre></div></div> </div> </div> </div> </div> </div> </div> </div> </div> <div class=sl-c-alert> <div aria-labelledby=release-nav class='sl-l-container sl-c-list-horizontal-wrapper'> <ul class=sl-l-grid--justify-center> <li id=release-nav> Current Releases: </li> <li> <span class=release-name><a href="/dart-sass">Dart Sass</a>&#32;<a href="https://github.com/sass/dart-sass/releases/tag/1.24.4">1.24.4</a></span> </li> <li> <span class=release-name><a href="/libsass">LibSass</a>&#32;<a href="https://github.com/sass/libsass/releases/tag/3.6.3">3.6.3</a></span> </li> <li> <span class=release-name><a href="/ruby-sass">Ruby Sass</a><span aria-label=coffin role=presentation> &#32; ⚰ </span></span> </li> <li class='sl-l-grid__column sl-l-large-grid__column--auto-size'> <a href="/implementation">Implementation Guide</a> </li> </ul> </div> </div> </main> <footer class='site-footer contentinfo' itemscope=itemscope itemtype='http://schema.org/WPFooter' role=contentinfo> <div class='sl-l-container sl-l-section'> <div class='sl-l-grid sl-l-grid--full sl-l-large-grid--fit sl-l-large-grid--center sl-l-large-grid--gutters'> <div class=sl-l-grid__column> <p>Sass &copy; 2006&ndash;2020 <a href="https://github.com/hcatlin">Hampton Catlin</a>, <a href="https://twitter.com/nex3">Natalie Weizenbaum</a>, <a href="http://chriseppstein.github.io/">Chris Eppstein</a>, <a href="https://www.sushiandrobots.com">Jina Anne</a>, and numerous contributors. It is available for use and modification under the <a href="https://github.com/sass/dart-sass/blob/master/LICENSE">MIT&nbsp;License</a>.</p> <nav class=sl-c-list-horizontal-wrapper> <ul> <li><a href="https://github.com/sass">Sass on GitHub</a></li> <li><a href="https://github.com/sass/sass-site">Website Source Code</a></li> <li><a href="/styleguide">Style Guide</a></li> <li><a href="/community-guidelines">Community Guidelines</a></li> </ul> </nav> </div> <div class='sl-l-grid__column sl-l-large-grid__column--auto-size sl-l-large-grid--justify-right'> <a class=twitter-follow-button data-show-count=false data-size=large href='https://twitter.com/SassCSS'> Follow @SassCSS </a> <script>
  !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
</script> </div> </div> </div> </footer> <script src="https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js"></script> <script>
  docsearch({
    apiKey: 'a409ff5d6a2476083c1a8dd1f8c04ec5',
    indexName: 'sass-lang',
    inputSelector: 'input.search',
    transformData: function(hits) {
      var domain = window.location.origin + "/";
      hits.forEach(function(hit) {
        if (!hit.url.startsWith(domain)) {
          hit.url = hit.url.replace(/^https?:\/\/[^\/]+\//, domain);
        }
      });
      return hits;
    },
    debug: false
  });
</script> <script src="/assets/js/sass-184dcd58.js"></script> </body> </html>