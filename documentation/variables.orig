<!DOCTYPE html> <html class=no-js lang=en> <head> <meta charset=utf-8> <meta content='IE=edge' http-equiv=X-UA-Compatible> <title>Sass: Variables</title> <meta content='Syntatically Awesome Style Sheets' name=description> <meta content='width=device-width, initial-scale=1' name=viewport> <link href='/feed.xml' rel=alternate type='application/atom+xml'> <link href="https://fonts.googleapis.com/css?family=Source+Code+Pro|Source+Sans+Pro:300,400,600|Source+Serif+Pro" rel=stylesheet /> <link href="https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css" rel=stylesheet /> <link href="/assets/css/sass-6cc9628c.css" rel=stylesheet /> <noscript><link href="/assets/css/noscript-c6723936.css" rel=stylesheet /></noscript> <script>
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-535380-8']);
  _gaq.push(['_trackPageview']);
  
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script> <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  
  ga('create', 'UA-535380-14', 'sass-lang.com');
  ga('send', 'pageview');
</script> </head> <body class='documentation documentation_variables'> <!--[if lt IE 9]><p class=browserupgrade> You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience and security. </p><![endif]--> <header class=sl-r-banner itemscope=itemscope itemtype='http://schema.org/WPHeader' role=banner> <div class='sl-c-alert sl-c-alert--info'> <div class=sl-l-container> <p> Sass just launched a brand new module system. <a href="/blog/the-module-system-is-launched">Learn all about the module system on the Sass blog </a>! </p> </div> </div> <div class=sl-c-pop-stripe></div> <div class=sl-l-container> <div class='sl-l-grid sl-l-grid--full sl-l-large-grid--fit sl-l-large-grid--center sl-l-large-grid--gutters'> <p class='sl-l-grid__column sl-r-banner__brand'> <a href="/"><img alt=Sass height=48 src="/assets/img/logos/logo-b6e1ef6e.svg"/> </a></p> <nav aria-label='Site navigation' class='sl-r-banner__navigation sl-l-grid__column sl-l-large-grid sl-l-large-grid__column--auto-size sl-c-list-horizontal-wrapper' itemscope=itemscope itemtype='http://schema.org/SiteNavigationElement' role=navigation> <ul> <li><a href="/install">Install</a></li> <li><a href="/guide">Learn Sass</a></li> <li><a href="/blog">Blog</a></li> <li><a href="/documentation">Documentation</a></li> <li><a href="/community">Get Involved</a></li> <li><label class=visuallyhidden for=s>Search</label><input placeholder=Search class=search id=s name=s></li> </ul> </nav> </div> </div> </header> <main class=content id=main-content itemprop=mainContentOfPage role=main> <h1 class=sl-l-container> Variables </h1> <div class='sl-background--white sl-l-container sl-l-section'><div class=sl-l-medium-holy-grail> <div class=sl-l-medium-holy-grail__body> <nav aria-label='Content navigation' class=sl-l-medium-holy-grail__navigation role=navigation> <div class='sl-c-list-navigation-wrapper sl-c-list-navigation-wrapper--collapsible'> <h2>Contents</h2> <ul><li><a href="/documentation/syntax" class=section>Syntax</a> <ul><li class=overview><a href="/documentation/syntax">Overview</a></li> <li><a href="/documentation/syntax/parsing" class="">Parsing a Stylesheet</a> </li> <li><a href="/documentation/syntax/structure" class="">Structure of a Stylesheet</a> </li> <li><a href="/documentation/syntax/comments" class="">Comments</a> </li> <li><a href="/documentation/syntax/special-functions" class="">Special Functions</a> </li> </ul> </li> <li><a href="/documentation/style-rules" class=section>Style Rules</a> <ul><li class=overview><a href="/documentation/style-rules">Overview</a></li> <li><a href="/documentation/style-rules/declarations" class="">Property Declarations</a> </li> <li><a href="/documentation/style-rules/parent-selector" class="">Parent Selector</a> </li> <li><a href="/documentation/style-rules/placeholder-selectors" class="">Placeholder Selectors</a> </li> </ul> </li> <li><a href="/documentation/variables" class="open selected">Variables</a> </li> <li><a href="/documentation/interpolation" class="">Interpolation</a> </li> <li><a href="/documentation/at-rules" class=section>At-Rules</a> <ul><li class=overview><a href="/documentation/at-rules">Overview</a></li> <li><a href="/documentation/at-rules/use" class=""><code>@use</code></a> </li> <li><a href="/documentation/at-rules/forward" class=""><code>@forward</code></a> </li> <li><a href="/documentation/at-rules/import" class=""><code>@import</code></a> </li> <li><a href="/documentation/at-rules/mixin" class=""><code>@mixin</code> and <code>@include</code></a> </li> <li><a href="/documentation/at-rules/function" class=""><code>@function</code></a> </li> <li><a href="/documentation/at-rules/extend" class=""><code>@extend</code></a> </li> <li><a href="/documentation/at-rules/error" class=""><code>@error</code></a> </li> <li><a href="/documentation/at-rules/warn" class=""><code>@warn</code></a> </li> <li><a href="/documentation/at-rules/debug" class=""><code>@debug</code></a> </li> <li><a href="/documentation/at-rules/at-root" class=""><code>@at-root</code></a> </li> <li><a href="/documentation/at-rules/control" class=section>Flow Control</a> <ul><li class=overview><a href="/documentation/at-rules/control">Overview</a></li> <li><a href="/documentation/at-rules/control/if" class=""><code>@if</code> and <code>@else</code></a> </li> <li><a href="/documentation/at-rules/control/each" class=""><code>@each</code></a> </li> <li><a href="/documentation/at-rules/control/for" class=""><code>@for</code></a> </li> <li><a href="/documentation/at-rules/control/while" class=""><code>@while</code></a> </li> </ul> </li> <li><a href="/documentation/at-rules/css" class="">From CSS</a> </li> </ul> </li> <li><a href="/documentation/values" class=section>Values</a> <ul><li class=overview><a href="/documentation/values">Overview</a></li> <li><a href="/documentation/values/numbers" class="">Numbers</a> </li> <li><a href="/documentation/values/strings" class="">Strings</a> </li> <li><a href="/documentation/values/colors" class="">Colors</a> </li> <li><a href="/documentation/values/lists" class="">Lists</a> </li> <li><a href="/documentation/values/maps" class="">Maps</a> </li> <li><a href="/documentation/values/booleans" class=""><code>true</code> and <code>false</code></a> </li> <li><a href="/documentation/values/null" class=""><code>null</code></a> </li> <li><a href="/documentation/values/functions" class="">Functions</a> </li> </ul> </li> <li><a href="/documentation/operators" class=section>Operators</a> <ul><li class=overview><a href="/documentation/operators">Overview</a></li> <li><a href="/documentation/operators/equality" class="">Equality</a> </li> <li><a href="/documentation/operators/relational" class="">Relational</a> </li> <li><a href="/documentation/operators/numeric" class="">Numeric</a> </li> <li><a href="/documentation/operators/string" class="">String</a> </li> <li><a href="/documentation/operators/boolean" class="">Boolean</a> </li> </ul> </li> <li><a href="/documentation/modules" class=section>Built-In Modules</a> <ul><li class=overview><a href="/documentation/modules">Overview</a></li> <li><a href="/documentation/modules/color" class=""><code>sass:color</code></a> </li> <li><a href="/documentation/modules/list" class=""><code>sass:list</code></a> </li> <li><a href="/documentation/modules/map" class=""><code>sass:map</code></a> </li> <li><a href="/documentation/modules/math" class=""><code>sass:math</code></a> </li> <li><a href="/documentation/modules/meta" class=""><code>sass:meta</code></a> </li> <li><a href="/documentation/modules/selector" class=""><code>sass:selector</code></a> </li> <li><a href="/documentation/modules/string" class=""><code>sass:string</code></a> </li> </ul> </li> <li><a href="/documentation/breaking-changes" class=section>Breaking Changes</a> <ul><li class=overview><a href="/documentation/breaking-changes">Overview</a></li> <li><a href="/documentation/breaking-changes/extend-compound" class="">Extending Compound Selectors</a> </li> <li><a href="/documentation/breaking-changes/css-vars" class="">CSS Variable Syntax</a> </li> </ul> </li> <li><a href="/documentation/cli" class=section>Command Line</a> <ul><li class=overview><a href="/documentation/cli">Overview</a></li> <li><a href="/documentation/cli/dart-sass" class="">Dart Sass</a> </li> <li><a href="/documentation/cli/ruby-sass" class="">Ruby Sass</a> </li> <li><a href="/documentation/cli/migrator" class="">Migrator</a> </li> </ul> </li> <li><a href="/documentation/js-api" class="">JavaScript API</a> </li> </ul> </div> </nav> <div class=sl-l-medium-holy-grail__main> <div class=sl-l-large-holy-grail> <div class=sl-l-large-holy-grail__body> <div class='sl-l-large-holy-grail__complementary sl-l-large-holy-grail__complementary--contents'> <nav aria-labelledby=page-sections class='page-sections sl-c-list-navigation-wrapper sl-c-list-navigation-wrapper--collapsible'> <h3 id=page-sections>Page Sections</h3> <ul> <li> <a href="#default-values" class="section open">Default Values</a> <ul> <li class=overview><a href="#default-values">Overview</a></li> <li> <a href="#configuring-modules">Configuring Modules</a> </li> </ul> </li> <li> <a href="#scope" class="section open">Scope</a> <ul> <li class=overview><a href="#scope">Overview</a></li> <li> <a href="#shadowing">Shadowing</a> </li> <li> <a href="#flow-control-scope">Flow Control Scope</a> </li> </ul> </li> <li> <a href="#advanced-variable-functions">Advanced Variable Functions</a> </li> </ul> </nav> </div> <div class='sl-l-large-holy-grail__main docSearch-content'> <div class='sl-l-container sl-l-container--small'> <div class=sl-c-introduction> <p>Sass variables are simple: you assign a value to a name that begins with <code>$</code>, and then you can refer to that name instead of the value itself. But despite their simplicity, they&#39;re one of the most useful tools Sass brings to the table. Variables make it possible to reduce repetition, do complex math, configure libraries, and much more.</p> </div> <p>A variable declaration looks a lot like a <a href="style-rules/declarations">property declaration</a>: it&rsquo;s&nbsp;written <code>&lt;variable&gt;: &lt;expression&gt;</code>. Unlike a property, which can only be declared in&nbsp;a style rule or at-rule, variables can be declared anywhere you want. To use&nbsp;a variable, just include it in a&nbsp;value.</p> <div class="code-example ui-tabs can-split" style="--split-location: 50.0%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-1-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-1-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-1-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-1-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nv">$base-color</span><span class="p">:</span> <span class="mh">#c6538c</span><span class="p">;</span>&#x000A;<span class="nv">$border-dark</span><span class="p">:</span> <span class="nf">rgba</span><span class="p">(</span><span class="nv">$base-color</span><span class="o">,</span> <span class="m">0</span><span class="mi">.88</span><span class="p">);</span>&#x000A;&#x000A;<span class="nc">.alert</span> <span class="p">{</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="nv">$border-dark</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-1-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nv">$base-color</span><span class="p">:</span> <span class="mh">#c6538c</span>&#x000A;<span class="nv">$border-dark</span><span class="p">:</span> <span class="nf">rgba</span><span class="p">(</span><span class="nv">$base-color</span><span class="o">,</span> <span class="m">0</span><span class="mi">.88</span><span class="p">)</span>&#x000A;&#x000A;<span class="nc">.alert</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="nv">$border-dark</span>&#x000A;&#x000A;</code></pre></div><div id=example-1-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nc">.alert</span> <span class="p">{</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="n">rgba</span><span class="p">(</span><span class="m">198</span><span class="p">,</span> <span class="m">83</span><span class="p">,</span> <span class="m">140</span><span class="p">,</span> <span class="m">0.88</span><span class="p">);</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> <div class="sl-c-callout sl-c-callout--warning"><h3>⚠️ Heads&nbsp;up!</h3> <p><span class=caps>CSS</span> has <a href="style-rules/declarations#custom-properties">variables of its own</a>, which are totally different than Sass variables. Know the&nbsp;differences!</p> <ul> <li><p>Sass variables are all compiled away by Sass. <span class=caps>CSS</span> variables are included in the <span class=caps>CSS</span>&nbsp;output.</p></li> <li><p><span class=caps>CSS</span> variables can have different values for different elements, but Sass variables only have one value at a&nbsp;time.</p></li> <li><p>Sass variables are <em>imperative</em>, which means if you use a variable and then change its value, the earlier use will stay the same. <span class=caps>CSS</span> variables are <em>declarative</em>, which means if you change the value, it&rsquo;ll affect both earlier uses and later&nbsp;uses.</p></li> </ul> <div class="code-example ui-tabs can-split" style="--split-location: 50.0%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-2-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-2-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-2-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-2-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nv">$variable</span><span class="p">:</span> <span class="n">value</span> <span class="m">1</span><span class="p">;</span>&#x000A;<span class="nc">.rule-1</span> <span class="p">{</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nv">$variable</span><span class="p">:</span> <span class="n">value</span> <span class="m">2</span><span class="p">;</span>&#x000A;<span class="nc">.rule-2</span> <span class="p">{</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-2-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nv">$variable</span><span class="p">:</span> <span class="n">value</span> <span class="m">1</span>&#x000A;<span class="nc">.rule-1</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span>&#x000A;&#x000A;&#x000A;<span class="nv">$variable</span><span class="p">:</span> <span class="n">value</span> <span class="m">2</span>&#x000A;<span class="nc">.rule-2</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span>&#x000A;&#x000A;</code></pre></div><div id=example-2-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nc">.rule-1</span> <span class="p">{</span>&#x000A;  <span class="py">value</span><span class="p">:</span> <span class="n">value</span> <span class="m">1</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.rule-2</span> <span class="p">{</span>&#x000A;  <span class="py">value</span><span class="p">:</span> <span class="n">value</span> <span class="m">2</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;</code></pre></div></div> </div> <div class="sl-c-callout sl-c-callout--fun-fact"><h3>💡 Fun&nbsp;fact:</h3> <p>Sass variables, like all Sass identifiers, treat hyphens and underscores as identical. This means that <code>$font-size</code> and <code>$font_size</code> both refer to the same variable. This is a historical holdover from the very early days of Sass, when it <em>only</em> allowed underscores in identifier names. Once Sass added support for hyphens to match <span class=caps>CSS</span>&rsquo;s syntax, the two were made equivalent to make migration&nbsp;easier.</p> </div> <h2 id=default-values> <a class=anchor href="#default-values"><span class=visuallyhidden>Default Values permalink</span></a>Default&nbsp;Values</h2> <p>Normally when you assign a value to a variable, if that variable already had&nbsp;a value, its old value is overwritten. But if you&rsquo;re writing a Sass library,&nbsp;you might want to allow your users to configure your library&rsquo;s variables before&nbsp;you use them to generate&nbsp;<span class=caps>CSS.</span></p> <p>To make this possible, Sass provides the <code>!default</code> flag. This assigns a&nbsp;value to a variable <em>only if</em> that variable isn&rsquo;t defined or its value is <a href="values/null"><code>null</code></a>. Otherwise, the existing value will be&nbsp;used.</p> <h3 id=configuring-modules> <a class=anchor href="#configuring-modules"><span class=visuallyhidden>Configuring Modules permalink</span></a>Configuring&nbsp;Modules</h3> <dl class="impl-status sl-c-description-list sl-c-description-list--horizontal"><div class=compatibility>Compatibility:</div> <div><dt>Dart&nbsp;Sass</dt> <dd>since&nbsp;<span class=caps>1.23.0</span></dd> </div> <div><dt>LibSass</dt> <dd>✗</dd> </div> <div><dt>Ruby&nbsp;Sass</dt> <dd>✗</dd> </div> <div><a>▶</a></div> </dl> <div class="sl-c-callout sl-c-callout--impl-status"><p>Only Dart Sass currently supports <code>@use</code>. Users of other implementations must use the <a href="/documentation/at-rules/import"><code>@import</code> rule</a>&nbsp;instead.</p></div> <p>Variables defined with <code>!default</code> can be configured when loading a module&nbsp;with the <a href="at-rules/use"><code>@use</code> rule</a>. Sass libraries often use <code>!default</code> variables to&nbsp;allow their users to configure the library&rsquo;s&nbsp;<span class=caps>CSS.</span></p> <p>To load a module with configuration, write <code>@use &lt;url&gt; with (&lt;variable&gt;: &lt;value&gt;, &lt;variable&gt;: &lt;value&gt;)</code>. The configured values will override&nbsp;the variables&rsquo; default values. Only variables written at the top level of&nbsp;the stylesheet with a <code>!default</code> flag can be&nbsp;configured.</p> <div class="code-example ui-tabs can-split" style="--split-location: 53.18181818181819%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-3-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-3-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-3-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-3-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="c1">// _library.scss&#x000A;</span><span class="nv">$black</span><span class="p">:</span> <span class="mh">#000</span> <span class="o">!</span><span class="nb">default</span><span class="p">;</span>&#x000A;<span class="nv">$border-radius</span><span class="p">:</span> <span class="m">0</span><span class="mi">.25rem</span> <span class="o">!</span><span class="nb">default</span><span class="p">;</span>&#x000A;<span class="nv">$box-shadow</span><span class="p">:</span> <span class="m">0</span> <span class="m">0</span><span class="mi">.5rem</span> <span class="m">1rem</span> <span class="nf">rgba</span><span class="p">(</span><span class="nv">$black</span><span class="o">,</span> <span class="m">0</span><span class="mi">.15</span><span class="p">)</span> <span class="o">!</span><span class="nb">default</span><span class="p">;</span>&#x000A;&#x000A;<span class="nt">code</span> <span class="p">{</span>&#x000A;  <span class="nl">border-radius</span><span class="p">:</span> <span class="nv">$border-radius</span><span class="p">;</span>&#x000A;  <span class="nl">box-shadow</span><span class="p">:</span> <span class="nv">$box-shadow</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre><pre class="highlight scss"><code><span class="c1">// style.scss&#x000A;</span><span class="k">@use</span> <span class="s1">'library'</span> <span class="nt">with</span> <span class="o">(</span>&#x000A;  <span class="err">$</span><span class="nt">black</span><span class="nd">:</span> <span class="nn">#222</span><span class="o">,</span>&#x000A;  <span class="err">$</span><span class="nt">border-radius</span><span class="nd">:</span> <span class="nt">0</span><span class="nc">.1rem</span>&#x000A;<span class="o">)</span><span class="p">;</span>&#x000A;</code></pre></div><div id=example-3-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="c1">// _library.sass&#x000A;</span><span class="nv">$black</span><span class="p">:</span> <span class="mh">#000</span> <span class="o">!</span><span class="nb">default</span>&#x000A;<span class="nv">$border-radius</span><span class="p">:</span> <span class="m">0</span><span class="mi">.25rem</span> <span class="o">!</span><span class="nb">default</span>&#x000A;<span class="nv">$box-shadow</span><span class="p">:</span> <span class="m">0</span> <span class="m">0</span><span class="mi">.5rem</span> <span class="m">1rem</span> <span class="nf">rgba</span><span class="p">(</span><span class="nv">$black</span><span class="o">,</span> <span class="m">0</span><span class="mi">.15</span><span class="p">)</span> <span class="o">!</span><span class="nb">default</span>&#x000A;&#x000A;<span class="nt">code</span>&#x000A;  <span class="nl">border-radius</span><span class="p">:</span> <span class="nv">$border-radius</span>&#x000A;  <span class="nl">box-shadow</span><span class="p">:</span> <span class="nv">$box-shadow</span>&#x000A;&#x000A;</code></pre><pre class="highlight sass"><code><span class="c1">// style.sass&#x000A;</span><span class="k">@use</span> <span class="s1">'library'</span> <span class="nt">with</span> <span class="o">(</span><span class="err">$</span><span class="nt">black</span><span class="nd">:</span> <span class="nn">#222</span><span class="o">,</span> <span class="err">$</span><span class="nt">border-radius</span><span class="nd">:</span> <span class="nt">0</span><span class="nc">.1rem</span><span class="o">)</span>&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div><div id=example-3-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nt">code</span> <span class="p">{</span>&#x000A;  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">0.1rem</span><span class="p">;</span>&#x000A;  <span class="nl">box-shadow</span><span class="p">:</span> <span class="m">0</span> <span class="m">0.5rem</span> <span class="m">1rem</span> <span class="n">rgba</span><span class="p">(</span><span class="m">34</span><span class="p">,</span> <span class="m">34</span><span class="p">,</span> <span class="m">34</span><span class="p">,</span> <span class="m">0.15</span><span class="p">);</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> <h2 id=scope> <a class=anchor href="#scope"><span class=visuallyhidden>Scope permalink</span></a>Scope</h2> <p>Variables declared at the top level of a stylesheet are <em>global</em>. This&nbsp;means that they can be accessed anywhere in their module after they&rsquo;ve been&nbsp;declared. But that&rsquo;s not true for all variables. Those declared in blocks (curly braces&nbsp;in <span class=caps>SCSS</span> or indented code in Sass) are usually <em>local</em>, and can only be&nbsp;accessed within the block they were&nbsp;declared.</p> <div class="code-example ui-tabs can-split" style="--split-location: 67.27272727272727%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-4-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-4-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-4-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-4-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nv">$global-variable</span><span class="p">:</span> <span class="n">global</span> <span class="n">value</span><span class="p">;</span>&#x000A;&#x000A;<span class="nc">.content</span> <span class="p">{</span>&#x000A;  <span class="nv">$local-variable</span><span class="p">:</span> <span class="n">local</span> <span class="n">value</span><span class="p">;</span>&#x000A;  <span class="na">global</span><span class="p">:</span> <span class="nv">$global-variable</span><span class="p">;</span>&#x000A;  <span class="na">local</span><span class="p">:</span> <span class="nv">$local-variable</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.sidebar</span> <span class="p">{</span>&#x000A;  <span class="na">global</span><span class="p">:</span> <span class="nv">$global-variable</span><span class="p">;</span>&#x000A;&#x000A;  <span class="c1">// This would fail, because $local-variable isn't in scope:&#x000A;</span>  <span class="c1">// local: $local-variable;&#x000A;</span><span class="p">}</span>&#x000A;</code></pre></div><div id=example-4-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nv">$global-variable</span><span class="p">:</span> <span class="n">global</span> <span class="n">value</span>&#x000A;&#x000A;<span class="nc">.content</span>&#x000A;  <span class="nv">$local-variable</span><span class="p">:</span> <span class="n">local</span> <span class="n">value</span>&#x000A;  <span class="na">global</span><span class="p">:</span> <span class="nv">$global-variable</span>&#x000A;  <span class="na">local</span><span class="p">:</span> <span class="nv">$local-variable</span>&#x000A;&#x000A;&#x000A;<span class="nc">.sidebar</span>&#x000A;  <span class="na">global</span><span class="p">:</span> <span class="nv">$global-variable</span>&#x000A;&#x000A;  <span class="c1">// This would fail, because $local-variable isn't in scope:&#x000A;</span>  <span class="c1">// local: $local-variable&#x000A;</span>&#x000A;</code></pre></div><div id=example-4-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nc">.content</span> <span class="p">{</span>&#x000A;  <span class="py">global</span><span class="p">:</span> <span class="n">global</span> <span class="n">value</span><span class="p">;</span>&#x000A;  <span class="py">local</span><span class="p">:</span> <span class="n">local</span> <span class="n">value</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.sidebar</span> <span class="p">{</span>&#x000A;  <span class="py">global</span><span class="p">:</span> <span class="n">global</span> <span class="n">value</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> <h3 id=shadowing> <a class=anchor href="#shadowing"><span class=visuallyhidden>Shadowing permalink</span></a>Shadowing</h3> <p>Local variables can even be declared with the same name as a global variable.&nbsp;If this happens, there are actually two different variables with the same name:&nbsp;one local and one global. This helps ensure that an author writing a local&nbsp;variable doesn&rsquo;t accidentally change the value of a global variable they aren&rsquo;t&nbsp;even aware&nbsp;of.</p> <div class="code-example ui-tabs can-split" style="--split-location: 50.0%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-5-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-5-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-5-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-5-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nv">$variable</span><span class="p">:</span> <span class="n">global</span> <span class="n">value</span><span class="p">;</span>&#x000A;&#x000A;<span class="nc">.content</span> <span class="p">{</span>&#x000A;  <span class="nv">$variable</span><span class="p">:</span> <span class="n">local</span> <span class="n">value</span><span class="p">;</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.sidebar</span> <span class="p">{</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-5-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nv">$variable</span><span class="p">:</span> <span class="n">global</span> <span class="n">value</span>&#x000A;&#x000A;<span class="nc">.content</span>&#x000A;  <span class="nv">$variable</span><span class="p">:</span> <span class="n">local</span> <span class="n">value</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span>&#x000A;&#x000A;&#x000A;<span class="nc">.sidebar</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span>&#x000A;&#x000A;</code></pre></div><div id=example-5-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nc">.content</span> <span class="p">{</span>&#x000A;  <span class="py">value</span><span class="p">:</span> <span class="n">local</span> <span class="n">value</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.sidebar</span> <span class="p">{</span>&#x000A;  <span class="py">value</span><span class="p">:</span> <span class="n">global</span> <span class="n">value</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> <p>If you need to set a global variable&rsquo;s value from within a local scope (such&nbsp;as in a mixin), you can use the <code>!global</code> flag. A variable declaration flagged&nbsp;as <code>!global</code> will <em>always</em> assign to the global&nbsp;scope.</p> <div class="code-example ui-tabs can-split" style="--split-location: 50.0%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-6-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-6-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-6-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-6-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nv">$variable</span><span class="p">:</span> <span class="n">first</span> <span class="n">global</span> <span class="n">value</span><span class="p">;</span>&#x000A;&#x000A;<span class="nc">.content</span> <span class="p">{</span>&#x000A;  <span class="nv">$variable</span><span class="p">:</span> <span class="n">second</span> <span class="n">global</span> <span class="n">value</span> <span class="o">!</span><span class="n">global</span><span class="p">;</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.sidebar</span> <span class="p">{</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-6-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nv">$variable</span><span class="p">:</span> <span class="n">first</span> <span class="n">global</span> <span class="n">value</span>&#x000A;&#x000A;<span class="nc">.content</span>&#x000A;  <span class="nv">$variable</span><span class="p">:</span> <span class="n">second</span> <span class="n">global</span> <span class="n">value</span> <span class="o">!</span><span class="n">global</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span>&#x000A;&#x000A;&#x000A;<span class="nc">.sidebar</span>&#x000A;  <span class="na">value</span><span class="p">:</span> <span class="nv">$variable</span>&#x000A;&#x000A;</code></pre></div><div id=example-6-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nc">.content</span> <span class="p">{</span>&#x000A;  <span class="py">value</span><span class="p">:</span> <span class="n">second</span> <span class="n">global</span> <span class="n">value</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.sidebar</span> <span class="p">{</span>&#x000A;  <span class="py">value</span><span class="p">:</span> <span class="n">second</span> <span class="n">global</span> <span class="n">value</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> <div class="sl-c-callout sl-c-callout--warning"><h3>⚠️ Heads&nbsp;up!</h3> <dl class="impl-status sl-c-description-list sl-c-description-list--horizontal"><div class=compatibility>Compatibility:</div> <div><dt>Dart&nbsp;Sass</dt> <dd>since&nbsp;<span class=caps>2.0.0</span></dd> </div> <div><dt>LibSass</dt> <dd>✗</dd> </div> <div><dt>Ruby&nbsp;Sass</dt> <dd>✗</dd> </div> <div><a>▶</a></div> </dl> <div class="sl-c-callout sl-c-callout--impl-status"><p>Older Sass versions allowed <code>!global</code> to be used for a variable that doesn&rsquo;t exist yet. This behavior was deprecated to make sure each stylesheet declares the same variables no matter how it&rsquo;s&nbsp;executed.</p></div> <p>The <code>!global</code> flag may only be used to set a variable that has already been declared at the top level of a file. It <em>may not</em> be used to declare a new&nbsp;variable.</p> </div> <h3 id=flow-control-scope> <a class=anchor href="#flow-control-scope"><span class=visuallyhidden>Flow Control Scope permalink</span></a>Flow Control&nbsp;Scope</h3> <p>Variables declared in <a href="at-rules/control">flow control rules</a> have special scoping rules:&nbsp;they don&rsquo;t shadow variables at the same level as the flow control rule. Instead,&nbsp;they just assign to those variables. This makes it much easier to&nbsp;conditionally assign a value to a variable, or build up a value as part of a&nbsp;loop.</p> <div class="code-example ui-tabs can-split" style="--split-location: 50.0%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-7-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-7-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-7-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-7-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="nv">$dark-theme</span><span class="p">:</span> <span class="bp">true</span> <span class="o">!</span><span class="nb">default</span><span class="p">;</span>&#x000A;<span class="nv">$primary-color</span><span class="p">:</span> <span class="mh">#f8bbd0</span> <span class="o">!</span><span class="nb">default</span><span class="p">;</span>&#x000A;<span class="nv">$accent-color</span><span class="p">:</span> <span class="mh">#6a1b9a</span> <span class="o">!</span><span class="nb">default</span><span class="p">;</span>&#x000A;&#x000A;<span class="k">@if</span> <span class="nv">$dark-theme</span> <span class="p">{</span>&#x000A;  <span class="nv">$primary-color</span><span class="p">:</span> <span class="nf">darken</span><span class="p">(</span><span class="nv">$primary-color</span><span class="o">,</span> <span class="m">60%</span><span class="p">);</span>&#x000A;  <span class="nv">$accent-color</span><span class="p">:</span> <span class="nf">lighten</span><span class="p">(</span><span class="nv">$accent-color</span><span class="o">,</span> <span class="m">60%</span><span class="p">);</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;<span class="nc">.button</span> <span class="p">{</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="nv">$primary-color</span><span class="p">;</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="nv">$accent-color</span><span class="p">;</span>&#x000A;  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">3px</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-7-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="nv">$dark-theme</span><span class="p">:</span> <span class="bp">true</span> <span class="o">!</span><span class="nb">default</span>&#x000A;<span class="nv">$primary-color</span><span class="p">:</span> <span class="mh">#f8bbd0</span> <span class="o">!</span><span class="nb">default</span>&#x000A;<span class="nv">$accent-color</span><span class="p">:</span> <span class="mh">#6a1b9a</span> <span class="o">!</span><span class="nb">default</span>&#x000A;&#x000A;<span class="k">@if</span> <span class="nv">$dark-theme</span>&#x000A;  <span class="nv">$primary-color</span><span class="p">:</span> <span class="nf">darken</span><span class="p">(</span><span class="nv">$primary-color</span><span class="o">,</span> <span class="m">60%</span><span class="p">)</span>&#x000A;  <span class="nv">$accent-color</span><span class="p">:</span> <span class="nf">lighten</span><span class="p">(</span><span class="nv">$accent-color</span><span class="o">,</span> <span class="m">60%</span><span class="p">)</span>&#x000A;&#x000A;&#x000A;<span class="nc">.button</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="nv">$primary-color</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="nv">$accent-color</span>&#x000A;  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">3px</span>&#x000A;&#x000A;</code></pre></div><div id=example-7-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nc">.button</span> <span class="p">{</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#750c30</span><span class="p">;</span>&#x000A;  <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="m">#f5ebfc</span><span class="p">;</span>&#x000A;  <span class="nl">border-radius</span><span class="p">:</span> <span class="m">3px</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> <div class="sl-c-callout sl-c-callout--warning"><h3>⚠️ Heads&nbsp;up!</h3> <p>Variables in flow control scope can assign to existing variables in the outer scope, but they can&rsquo;t declare new variables there. Make sure the variable is already declared before you assign to it, even if you need to declare it as&nbsp;<code>null</code>.</p> </div> <h2 id=advanced-variable-functions> <a class=anchor href="#advanced-variable-functions"><span class=visuallyhidden>Advanced Variable Functions permalink</span></a>Advanced Variable&nbsp;Functions</h2> <p>The Sass core library provides a couple advanced functions for working&nbsp;with variables. The <a href="modules/meta#variable-exists"><code>meta.variable-exists()</code> function</a> returns whether a&nbsp;variable with the given name exists in the current scope, and&nbsp;the <a href="modules/meta#global-variable-exists"><code>meta.global-variable-exists()</code> function</a> does the same but only for&nbsp;the global&nbsp;scope.</p> <div class="sl-c-callout sl-c-callout--warning"><h3>⚠️ Heads&nbsp;up!</h3> <p>Users occasionally want to use interpolation to define a variable name based on another variable. Sass doesn&rsquo;t allow this, because it makes it much harder to tell at a glance which variables are defined where. What you <em>can</em> do, though, is define a <a href="values/maps">map</a> from names to values that you can then access using&nbsp;variables.</p> <div class="code-example ui-tabs can-split" style="--split-location: 70.0%"><ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix"><li class="ui-tabs-tab ui-tabs-active"><a href="#example-8-scss" class=ui-tabs-anchor><span class=caps>SCSS</span></a></li><li class=ui-tabs-tab><a href="#example-8-sass" class=ui-tabs-anchor>Sass</a></li><li class="ui-tabs-tab css-tab"><a href="#example-8-css" class=ui-tabs-anchor><span class=caps>CSS</span></a></li></ul><div id=example-8-scss class="ui-tabs-panel scss"><h3 class=visuallyhidden><span class=caps>SCSS</span>&nbsp;Syntax</h3><pre class="highlight scss"><code><span class="k">@use</span> <span class="s2">"sass:map"</span><span class="p">;</span>&#x000A;&#x000A;<span class="nv">$theme-colors</span><span class="p">:</span> <span class="p">(</span>&#x000A;  <span class="s2">"success"</span><span class="o">:</span> <span class="mh">#28a745</span><span class="o">,</span>&#x000A;  <span class="s2">"info"</span><span class="o">:</span> <span class="mh">#17a2b8</span><span class="o">,</span>&#x000A;  <span class="s2">"warning"</span><span class="o">:</span> <span class="mh">#ffc107</span><span class="o">,</span>&#x000A;<span class="p">);</span>&#x000A;&#x000A;<span class="nc">.alert</span> <span class="p">{</span>&#x000A;  <span class="c1">// Instead of $theme-color-#{warning}&#x000A;</span>  <span class="nl">background-color</span><span class="p">:</span> <span class="n">map</span><span class="o">.</span><span class="nf">get</span><span class="p">(</span><span class="nv">$theme-colors</span><span class="o">,</span> <span class="s2">"warning"</span><span class="p">);</span>&#x000A;<span class="p">}</span>&#x000A;</code></pre></div><div id=example-8-sass class="ui-tabs-panel sass ui-tabs-panel-inactive"><h3 class=visuallyhidden>Sass&nbsp;Syntax</h3><pre class="highlight sass"><code><span class="k">@use</span> <span class="s2">"sass:map"</span>&#x000A;&#x000A;<span class="nv">$theme-colors</span><span class="p">:</span> <span class="p">(</span><span class="s2">"success"</span><span class="o">:</span> <span class="mh">#28a745</span><span class="o">,</span> <span class="s2">"info"</span><span class="o">:</span> <span class="mh">#17a2b8</span><span class="o">,</span> <span class="s2">"warning"</span><span class="o">:</span> <span class="mh">#ffc107</span><span class="p">)</span>&#x000A;&#x000A;<span class="nc">.alert</span>&#x000A;  <span class="c1">// Instead of $theme-color-#{warning}&#x000A;</span>  <span class="nl">background-color</span><span class="p">:</span> <span class="n">map</span><span class="o">.</span><span class="nf">get</span><span class="p">(</span><span class="nv">$theme-colors</span><span class="o">,</span> <span class="s2">"warning"</span><span class="p">)</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div><div id=example-8-css class="ui-tabs-panel css ui-tabs-panel-inactive"><h3 class=visuallyhidden><span class=caps>CSS</span>&nbsp;Output</h3><pre class="highlight css"><code><span class="nc">.alert</span> <span class="p">{</span>&#x000A;  <span class="nl">background-color</span><span class="p">:</span> <span class="m">#ffc107</span><span class="p">;</span>&#x000A;<span class="p">}</span>&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;&#x000A;</code></pre></div></div> </div> </div> </div> </div> </div> </div> </div> </div> </div> <div class=sl-c-alert> <div aria-labelledby=release-nav class='sl-l-container sl-c-list-horizontal-wrapper'> <ul class=sl-l-grid--justify-center> <li id=release-nav> Current Releases: </li> <li> <span class=release-name><a href="/dart-sass">Dart Sass</a>&#32;<a href="https://github.com/sass/dart-sass/releases/tag/1.24.4">1.24.4</a></span> </li> <li> <span class=release-name><a href="/libsass">LibSass</a>&#32;<a href="https://github.com/sass/libsass/releases/tag/3.6.3">3.6.3</a></span> </li> <li> <span class=release-name><a href="/ruby-sass">Ruby Sass</a><span aria-label=coffin role=presentation> &#32; ⚰ </span></span> </li> <li class='sl-l-grid__column sl-l-large-grid__column--auto-size'> <a href="/implementation">Implementation Guide</a> </li> </ul> </div> </div> </main> <footer class='site-footer contentinfo' itemscope=itemscope itemtype='http://schema.org/WPFooter' role=contentinfo> <div class='sl-l-container sl-l-section'> <div class='sl-l-grid sl-l-grid--full sl-l-large-grid--fit sl-l-large-grid--center sl-l-large-grid--gutters'> <div class=sl-l-grid__column> <p>Sass &copy; 2006&ndash;2020 <a href="https://github.com/hcatlin">Hampton Catlin</a>, <a href="https://twitter.com/nex3">Natalie Weizenbaum</a>, <a href="http://chriseppstein.github.io/">Chris Eppstein</a>, <a href="https://www.sushiandrobots.com">Jina Anne</a>, and numerous contributors. It is available for use and modification under the <a href="https://github.com/sass/dart-sass/blob/master/LICENSE">MIT&nbsp;License</a>.</p> <nav class=sl-c-list-horizontal-wrapper> <ul> <li><a href="https://github.com/sass">Sass on GitHub</a></li> <li><a href="https://github.com/sass/sass-site">Website Source Code</a></li> <li><a href="/styleguide">Style Guide</a></li> <li><a href="/community-guidelines">Community Guidelines</a></li> </ul> </nav> </div> <div class='sl-l-grid__column sl-l-large-grid__column--auto-size sl-l-large-grid--justify-right'> <a class=twitter-follow-button data-show-count=false data-size=large href='https://twitter.com/SassCSS'> Follow @SassCSS </a> <script>
  !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
</script> </div> </div> </div> </footer> <script src="https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js"></script> <script>
  docsearch({
    apiKey: 'a409ff5d6a2476083c1a8dd1f8c04ec5',
    indexName: 'sass-lang',
    inputSelector: 'input.search',
    transformData: function(hits) {
      var domain = window.location.origin + "/";
      hits.forEach(function(hit) {
        if (!hit.url.startsWith(domain)) {
          hit.url = hit.url.replace(/^https?:\/\/[^\/]+\//, domain);
        }
      });
      return hits;
    },
    debug: false
  });
</script> <script src="/assets/js/sass-184dcd58.js"></script> </body> </html>